[
  {
    "objectID": "core-lessons/pathways.html",
    "href": "core-lessons/pathways.html",
    "title": "Pathways",
    "section": "",
    "text": "Perhaps the most important part of Openscapes is helping teams identify their trailhead together, as illustrated in the Champions landscape illustration.\n\n\n\n\n\n\n\nWe support individuals to “find their teams” by discussing approaches and software, so that they find they have common parts of how they work, whether they are working on the same or different projects. This builds from the ideas of creating space and place in order to find the common, as introduced in the better science chapter.\nThe Pathways Spreadsheet provides a structured way for your team to think how you work and find common approaches and needs (template).\n\n\n\nExample Pathway Spreadsheet documenting how the team is working now and ideas for next steps\n\n\nThis format has helped many groups think through their trailhead and identifying where they are now. It also might not work for your group, and that is okay; use whatever format makes sense for you."
  },
  {
    "objectID": "core-lessons/pathways.html#planning-guidance",
    "href": "core-lessons/pathways.html#planning-guidance",
    "title": "Pathways",
    "section": "Planning guidance",
    "text": "Planning guidance\nYou’ll develop your Pathway by talking with others on your team, screensharing (“show me”), and asking questions.\nYou’ll use the document by creating a copy of the template and then discussing with your team. Start with the “Now” column. How do you work now? Add rows as best reflects your work, but take a moment before deleting them in case it’s something you haven’t thought about in this way before rather than if it’s not relevant to you. Then, move on to the “Next Steps” column as you think through priorities and learn from/with/for your cohort. This will be a work in progress throughout the cohort that you’ll present a snapshot of in the final Cohort Call (see next) and that you can revisit following the cohort as well."
  },
  {
    "objectID": "core-lessons/pathways.html#presenting-guidance",
    "href": "core-lessons/pathways.html#presenting-guidance",
    "title": "Pathways",
    "section": "Presenting guidance",
    "text": "Presenting guidance\nOn the final Cohort Call, each team presents their Pathways. Each team has 3 minutes to share followed by 2 minutes for questions. We encourage leads not to present, and it’s great when we hear multiple voices from the teams.\nThis is informal sharing of unpolished work-in-progress. Everyone makes progress throughout the Cohort: in mindsets, planning and actions. This is an opportunity to reflect and talk about it, building on the reflection breakout rooms that began most Cohort Calls. We’ve been reflective each week and we’ve all made progress.\nPresentations do not need be line-by-line of the Pathways Spreadsheet and there’s no wrong way to talk about your progress. Whatever your group wants to create and share is great - could be a photo of a whiteboard, a slide, the Pathways spreadsheet, or a “screenshare and tell” live walk-through of your files/code/ideas.\nA few reflection prompts that can help frame the presentations:\n\nWhat are the practices we’ve covered during the Cohort that most compel you?\nWhat are the practices we’ve covered this semester that most confuse you?\nAre there practices that are new to you that you didn’t originally think would work with your own research interests? If so, which?\nWhat are your two biggest take-aways from the Cohort?\nWhat future revisions will you propose making for your pathway\nAny final questions you want to workshop with the Cohort?"
  },
  {
    "objectID": "core-lessons/pathways.html#examples",
    "href": "core-lessons/pathways.html#examples",
    "title": "Pathways",
    "section": "Examples",
    "text": "Examples\n\n\n\nAn example of an Openscapes pathway written by the NOAA Alaska Fisheries Science Center EcoFOCI team. The diagram summarizes how they used to share code, data, and files, and what their ongoing plans are for streamlining these processes and creating a team culture of openness and psychological safety.\n\n\nSee more examples:\n\nA TL;DR Collection of Stories from Openscapes Champions and Mentors; these stories are largely from 3 months+ following Pathways presentations\nCase Studies from the inaugural Champions Cohort (2021)"
  },
  {
    "objectID": "core-lessons/github/github-issues.html",
    "href": "core-lessons/github/github-issues.html",
    "title": "GitHub for project management",
    "section": "",
    "text": "GitHub is best known as a collaborative coding platform. But of course productive collaboration requires communication, and GitHub has powerful features to support communication and project management through GitHub Issues."
  },
  {
    "objectID": "core-lessons/github/github-issues.html#preamble",
    "href": "core-lessons/github/github-issues.html#preamble",
    "title": "GitHub for project management",
    "section": "Preamble",
    "text": "Preamble\n\nWe are focusing on GitHub Issues here because they are a powerful way for team members to have active discussions about data and code, and therefore ways to participate in analyses even for those that are not involved in the day-to-day coding. I find Issues not only useful to discuss topics as a team, but I also treat it as my external memory: I write notes to myself, link to files and websites; I leave breadcrumbs for myself so that I am more easily able to remember my past thought processes and pick up projects where I left off.\nIn this way, GitHub Issues help actualize the mindset of Future You and Future Us. This means being deliberate now about communicating decisions and progress so that you or others can work in the future a little more smoothly. Using project management software is a strategy used by every software developer or people working on projects with many moving parts. It streamlines technical discussions with people who are coming/joining a group. It also helps organize and track projects that single or multiple & overlapping users can be a part of.\nWhile there are many options for project management software out there, I like using GitHub because it’s already managing my code and my work, and linked to my collaborators so it offers a streamlined way to communicate. It’s also one less account I need to have, which is a huge bonus in my mind.\nOne of the reason we talk about Issues in Openscapes is because they are an excellent way to develop habits for using GitHub for your analytical project more broadly."
  },
  {
    "objectID": "core-lessons/github/github-issues.html#what-are-issues",
    "href": "core-lessons/github/github-issues.html#what-are-issues",
    "title": "GitHub for project management",
    "section": "What are Issues?",
    "text": "What are Issues?\nEvery GitHub repository (shortened to “repo”) has a feature called Issues. Issues is GitHub’s project management and task-tracking feature.\n\nIssues “track ideas, enhancements, tasks, or bugs for work on GitHub.” - GitHub\n\n\n\n\n\nJenny Bryan has an excellent summary of Issues in her article “Excuse Me, Do You Have a Moment to Talk About Version Control?” (open-access pre-print from PeerJ, published in The American Statistican):\n\nGitHub issues are another powerful feature of the platform. Recall that we are repurposing Git, a tool that facilitates software development. Think of the issues for a project as its bug tracker. For projects that are not pure software development, we co-opt this machinery to organize our to-do list more generally. The basic unit is an issue and you can interact with one in two ways.\n\n\nFirst, issues are integrated into the project’s web interface on GitHub, with a rich set of options for linking to project files and incremental changes. Second, issues and their associated comment threads appear in your email, just like regular messages (this can, of course, be configured). The result is that all correspondence about a project comes through your normal channels, but is also tracked inside the project itself, with excellent navigability and search capabilities. For software, issues are used to track bugs and feature requests. In a data analysis project, you might open an issue to flesh out a specific sub-analysis or to develop a complicated figure. In a course, we use them to manage homework submission, marking, and peer review.\n\n\nIssues can be assigned to specific people and they can be labelled, e.g. “bug”, “simulation- study”, or “final-exam”. Coupled with the ability to cross-link issues and the project files or file changes, you have extraordinary power to document why things have happened in the past and to organize what needs to happen in the future.\n\n\nYou create an Issue for a topic, and use it track progress or ask questions. You can provide links, describe updates, link to other Issues, and you can close the Issue when it is completed. You can also re-open previously-closed Issues.\nEvery GitHub repository has this Issues feature. This means that sometimes Issues are public and sometimes they are private.\n\nIn a public repo, anyone with a GitHub username can create and comment on issues.\nIn a private repo, only users with permission can create and comment on issues, or see them at all\n\nGitHub search is awesome – it will search all of your files and Issues!"
  },
  {
    "objectID": "core-lessons/github/github-issues.html#issues-in-the-wild",
    "href": "core-lessons/github/github-issues.html#issues-in-the-wild",
    "title": "GitHub for project management",
    "section": "Issues in the Wild",
    "text": "Issues in the Wild\nHere are some examples of “traditional” and “non-traditional” use of issues.\nggplot2’s Issues is an example of what I think is the “traditional” use of Issues, which is in a pretty pure software development context. This is a public repository, and all topics are directly related to ggplot2. Issues are largely used to report bugs, troubleshoot and sometimes to request features. Note the “Filters” feature on the top-left: this by default will search through the Issues that are still open, but you can also change this if you wanted to search also for closed Issues (just below “Filters” you can see that there are over 2000 closed Issues, documenting the innovation that’s been ongoing in ggplot2).\n\n\n\nMozillaFestival’s Issues are an example of a less “traditional”, but increasingly common use of Issues: for project submissions, coordination, and community engagement. It is also an example of the use of labels: those colorful tags that help group and categorize the Issues. To the right of “Filters”, you’ll see a “Labels” button: clicking on this will give you a list of all the labels and how many Issues are tagged with each label.\n\n\n\nOHI-Science’s Issues: are also an example of less “traditional” use of Issues but perhaps also somewhat common. This is a private repository, which is why there is no link to these Issues. Here, Issues are used for private conversations and archiving ideas and discussions: the OHI-Science team uses issues instead of email to have private, archived, searchable conversations about scientific methods. We are diligent about having important science conversations in these Issues, rather than those conversations being lost in emails or Slack. This is more organized and also makes onboarding team members much smoother since we do not need to forward emails to new team members."
  },
  {
    "objectID": "core-lessons/github/github-issues.html#how-to-use-issues",
    "href": "core-lessons/github/github-issues.html#how-to-use-issues",
    "title": "GitHub for project management",
    "section": "How to use Issues",
    "text": "How to use Issues\nLet’s do a demo with Issues.\n\nCreating a new Issue\nWhen you click on the green “New Issue” button”, you’re asked to give a Title and Leave a Comment. You can also attach files or images by dragging them into the Issue.\nThen you’ll be able to Submit the Issue. On the right side, you’ll see options to Assign someone to the Issue, add a Label, add it to a Project, or add it to a Milestone. We’ll explore these features a bit more in a moment.\n\n\n\nWhen you click Submit, your Issue gets a number, which is now written next to the title. This number is also part of the URL as well.\nOn the right of the Title, note that there is an “Edit” button if you ever need to change the title of the Issue as the conversation evolves. The Issue number will stay the same.\nWhat happens if you want to edit the text of your Comment after you’ve Submitted it? No problem. See that once you’ve submitted an Issue, there is a blue bar at the top of the Comment, attributing your username to this comment along with the date. At the very right of this blue bar, there are 3 dots. Clicking here will give you the option to edit.\n\n\nCommenting\nThe great thing about Issues is that they are for conversations with yourself and others. So once you’ve submitted an Issue, you can string together additional Comments within this comment. Maybe you asked a question, and someone else will respond with a solution or idea. They might link to an Issue with a related topic, or an external link that might be helpful.\nYou can also tag people in Issue Comments with the “@” symbol. As noted above, anyone who is part of the repository will automatically get email notifications when comments are submitted. But tagging specific users will also send them an email, and is a good way to bring folks into the conversation who might not already be “watching” the whole repository. In a public repository you can tag any GitHub user, and in a private repository they have to have permission.\nEach time there is a comment in the Issue thread, there will be a new date marked in the blue bar at the top of the Issue. This is a nice way to see how current conversations are.\nAnd something really great is that you can click on the date — and watch the URL change. This allows you to anchor to a specific comment within the Issue thread. This is really useful if, for example, you wanted to share a specific comment with someone else instead of having them scroll down themselves. (Note: you can also click on the three dots at the right of the blue Comment header to copy the anchored link).\n\n\n\n\n\nMarkdown\nIssues support Markdown. This means that you can add simple formatting to your text, such as headers, bold and italics, lists, images, links, and formatted code. To help you use Markdown formatting as you learn, GitHub Issues have built-in help: there are icons between the Title and the Comment of the Issue that will do the Markdown formatting for you, and help you learn along the way.\nThere is also a “Preview” tab between the Title and Comment (next to the “Write” tab, where you are by default) where you can preview what your Markdown formatting looks like before you Submit the Issue. Submitting the Issue will also render the Markdown formatting.\nGitHub enables you to also create Markdown check-lists by typing - [ ]. Once this is rendered, you can click it to check this box. Alternatively, in Markdown you check a box by typing - [x]. The number of checked and unchecked items will be visible in the Issue as well.\n\n\n\n\n\nLinking to files\nLinking to specific files or versions of files is good practice when you are discussing it in an Issue: reduce the work for the person reading the Issue (which might be Future You!). You can link to the file by opening it in the browser and copying its URL and placing it in Markdown formatting for hyperlinks: [text to hyperlink](URL).\nYou can also navigate to a specific version of that file, or a specific commit message, if you want to capture that file at a specific point in time.\nYou can also anchor to specific lines within a file, which is useful if you are requesting feedback on a specific part of an analysis or asking for help troubleshooting. I can send someone to a specific place within a file with the appropriate lines highlighted. For example [important code](https://github.com/Openscapes/issues-demo/blob/master/code-example.R#L12-L13) will render as important code.\n\n \n\n\nAssigning, Labels\nOn the right side of the Issue thread, there is the “metadata” for the Issue. You can assign the Issue to a specific user, or label it with a suite of labels that you can customize (when you click on labels, see all the way at the bottom the option to edit labels. And there are other ways to navigate there as well).\nIf you navigate back to the full list of Issue topics (which will have the URL github.com/username-or-organization/repo-name/issues), you’ll see these metadata categories listed at the top as well, which lets you filter or view based on these categories.\n\n \n\n\nProjects, Milestones\nProjects and Milestones are further ways to organize and track progress with your Issues.\nProjects are a way to organize and prioritize your issues. It uses the idea of a Kanban board, which Wikipedia says “visually depict work at various stages of a process using cards to represent work items and columns to represent each stage of the process. Cards are moved from left to right to show progress and to help coordinate teams performing the work.” The simplest have 3 columns labeled “to do”, “doing” and “done”.\nYou can use Projects for both Organization or personal projects. In fact, you can have multiple projects within the same repository, so different people can have different Projects organized within their shared repository, for example.\nYou have a lot of control over how you will manage your Projects; at this point I do not use all the features but have been playing around with using them for Openscapes planning:\n\n\n\nMilestones are a way to attach deadlines to your Project (although you do not need to identify a date if you don’t want to). Once you create a Milestone, you can add Issues to that Milestone to help track progress. For example, maybe you have a presentation coming up and there are several Issues that need to be addressed before then."
  },
  {
    "objectID": "core-lessons/github/github-issues.html#strategies-for-issues",
    "href": "core-lessons/github/github-issues.html#strategies-for-issues",
    "title": "GitHub for project management",
    "section": "Strategies for Issues",
    "text": "Strategies for Issues\n\nEvery repo has Issues, but do you want to use Issues in every repo? It helps to consider the purpose for the Issues.\nUsing Issues for “traditional” bug/features for code, it makes sense to keep the repository public and have all Issues pertaining to that repo there within that repo.\nIf you’re using Issues for “non-traditional” laboratory research group and science conversations, there are other considerations. Maybe you do want a private repository, but even so you’ll want to think ahead. Will you eventually make that repo public when you publish your study? Changing a repo from private to public (or vice versa, both are possible in the repository’s Settings) will make not only the code and files of that repo public, but also all the Issues. Which is fine, but it might add considerations in terms of what is discussed in those Issues.\n\nOHI example\nHere is an example of the Ocean Health Index team’s thought process & strategy.\nOur team works within a GitHub Organization called “OHI-Science”. Within that Organization, we work in many repositories, with different combinations of people working primarily within different repositories. Sanity-wise, we didn’t want to have conversations in Issues within each of those repositories because it would make finding those conversations more difficult (although now GitHub can search all Issues/code across an Organization!).\nWe also wanted our repos to be public, but to have private conversations using the Issues feature.\nThese two needs led us to create a single private repository named “issues”, and we only use it for Issues. This works really well for us, especially since our team lead can engage in these discussions by receiving emails about the Issues in his inbox, and can respond without having to go to GitHub.com."
  },
  {
    "objectID": "core-lessons/github/github-issues.html#your-turn-create-comment-on-issues",
    "href": "core-lessons/github/github-issues.html#your-turn-create-comment-on-issues",
    "title": "GitHub for project management",
    "section": "Your Turn: Create & comment on issues",
    "text": "Your Turn: Create & comment on issues\nWe will break into groups and you can explore some of these features in Issues. Here is what to do:\n\nGo to github.com/openscapes/demo/issues\nCreate an issue, tag people in your breakout group (ask for their username)\nBrowse issues, comment in other issues\nTry:\n\nLinking to the .md document you created in the previous chapter\nCreating a label and applying it, assigning people\nAdding Issues to a Project (create one if need be)\nClosing an Issue\n\n\nHave fun! And throughout the process, talk to your breakout group, and share what you learn.\nHere’s what your inbox will look like afterwards:\n\n \nThis is pretty rare to receive so many emails all at once. But you can always switch your setting to “Not Watch” this repository so that you only receive emails about Issues that you are tagged in."
  },
  {
    "objectID": "core-lessons/github/index.html",
    "href": "core-lessons/github/index.html",
    "title": "GitHub strategies",
    "section": "",
    "text": "What is GitHub*, and what are GitHub strategies for Future Us?\nGitHub is a powerful tool for collaborative coding with version control, but here and in our GitHub Clinic we are going to focus on some of its lesser-celebrated awesomeness. We’ll talk about GitHub for supporting, reusing, contributing, and failing safely, as well as GitHub for publication and project management. We will focus on how to use GitHub for collaboration and communication for science, and spend time with hands-on practice.\nSlides that have been presented during Champions Program Cohort Calls:\n*From Bryan 2017: “we’re targeting GitHub - not Bitbucket or GitLab - for the sake of specificity. However, all the big-picture principles and even some mechanics will carry over to these alternative hosting platforms. We are advocating for the use of hosted version control as a general concept, with GitHub being the best and most common provider today.”"
  },
  {
    "objectID": "core-lessons/github/index.html#github-for-supporting-reusing-contributing-and-failing-safely",
    "href": "core-lessons/github/index.html#github-for-supporting-reusing-contributing-and-failing-safely",
    "title": "GitHub strategies",
    "section": "GitHub for supporting, reusing, contributing, and failing safely",
    "text": "GitHub for supporting, reusing, contributing, and failing safely\nThis introduction was developed with Allison Horst in the GitHub Illustrated Series (Horst & Lowndes 2022):\nWhen we talk about managing projects to help us contribute, reuse, collaborate, and fail safely, we are talking about GitHub. We mean using modern collaborative software designed to organize otherwise unwieldy interrelated files and to track changes by potentially different people through time – something that is for everyone, whether or not we identify as “coders”. People do use GitHub for code- and data-intensive projects, but we are not limited to that use. GitHub is a powerful approach for any project that we want to organize and communicate about; it’s a way we can be open with ourselves and our teams, and also work more publicly as we feel comfortable.\nSo let’s talk about why GitHub is so empowering for our project-oriented and collaborative lives.\n\n\n\n\n\nSee the GitHub Illustrated Series (Horst & Lowndes 2022) for the full series!"
  },
  {
    "objectID": "core-lessons/github/index.html#growth-mindset",
    "href": "core-lessons/github/index.html#growth-mindset",
    "title": "GitHub strategies",
    "section": "Growth Mindset",
    "text": "Growth Mindset\nWhen we teach GitHub, we find it’s useful to say explicitly that we should go in with a Growth Mindset - the idea that we don’t know something yet but we are able to learn. Growth Mindset is work by Dr. Carol Dweck - see her book, TED Talk (10 min); illustrated video (2 min).\nAs part of this, we like how Jenny Bryan (Code Smells and Feels) thinks about this - that your tastes develops faster than your abilities.\n\n\n\nSlide from Jenny Bryan (Code Smells and Feels)"
  },
  {
    "objectID": "core-lessons/github/index.html#github-for-research-groups",
    "href": "core-lessons/github/index.html#github-for-research-groups",
    "title": "GitHub strategies",
    "section": "GitHub for research groups",
    "text": "GitHub for research groups\nAs you get a better hands-on sense of GitHub’s capabilities, you’ll be thinking about how to get organized and use this for your own research group.\n\nOrganizations\nHere are two examples of GitHub Organizations created as part of Openscapes Champions Cohorts where the content is now developed and maintained to support a broader range of researchers.\n\nNASA Openscapes https://github.com/NASA-Openscapes\nNMFS Openscapes for NOAA Fisheries https://github.com/nmfs-openscapes\n\nMany Champions teams create GitHub Organizations for their research group. This is a way for all the work that happens in the research group to be organized in one place, but also clearly attributed and credited by each user who contributes.\nYou can explore other Champions teams’ GitHub organizations they’ve created. They’re listed under the Cohorts in which they participated:\nNOAA NEFSC\n\nGavin Fay Lab https://github.com/thefaylab\n\n2021 NOAA NMFS Cohort\n\nNWFSC Fisheries Engineering and Acoustic Technologies (FEAT) team https://github.com/NOAA-FEAT\nNWFSC Protected Salmonids Team https://github.com/nwfsc-math-bio\nAFSC GAP Survey Data Products https://github.com/afsc-gap-products\n\nCS&S Cohort blog post; Cohort repo\n\nKenai Watershed Forum https://github.com/Kenai-Watershed-Forum\nWildCo Lab https://github.com/WildCoLab\n\nCSU-COAST Cohort blog post; Cohort repo\n\nLogan Lab https://github.com/loganlabcsumb\nEcological Oceanography Lab at CSUN https://github.com/ecoocelab-csun\nClaisse Lab @ Cal Poly Pomona https://github.com/ClaisseLab\nCoastal Ecosystems Lab https://github.com/coastal-ecosystems-lab\n\n\n\n\nShould my students create repos in our lab organization?\nWhile there are many different approaches that could make sense for your group, our starting recommendation would be that any project happening in the research group gets its own repository, and that repository is in the research group’s Organization. This is then clearly part of the research group’s work and more findable by past/current/future members. And it can be forked to other accounts at any time.\n\n\n\nIssues\nIssues and Projects are a great way to keep organized. See a few examples in the NOAA Fisheries wiki and Openscapes How We Work issues and Planning project.\n\nHow much should I write in a single Issue?\nThe “size” of each Issue is something you’ll get a feel for as you use them more, so don’t worry too much about it as you get started. The most common “size” of Issue is something you can complete, and close. This might include smaller checklists and conversations, but it is more along the lines of “change axes labels in my plot” rather than “write thesis chapter”.\nSome Issues are also used more as reference and shared resources, and might not be closed so they’re easier to discover. Depending on your workflow and norms you establish with your group, it might be best to keep those reference issues in a different repository so you don’t have lingering open issues in a repo that you like to close issues and move on.\nWhen you’re logged into GitHub, go to https://github.com/issues to see all of the Issues assigned/created/etc for your account!\n\n\n\nBranches\nBranches are a really powerful feature for software development, but aren’t necessarily the right place for new GitHub users to get started. If there are a small number of people in a single repository and you’re all first learning, we’d suggest that you start using GitHub without branches, and focus on checking in with each other as you contribute (see R for Excel Users example collaborating with GitHub from RStudio).\n\nAside: Julie Lowndes only worked in the main branch with her small group of Ocean Health Index colleagues for the first 8 years as a GitHub user; it was only when working with the NASA Openscapes Mentors community that she learned how to use branches as software developers do.\n\nBranches are powerful as your teams grow and/or as you become savvier with GitHub and code, so it is good to discuss strategies with them.\n\nShould we do everything in a dev branch?\nFull question: “Right now any collaborative code in my group has a main branch and a dev branch. All collaborators clone the dev branch and push back to the dev branch on GitHub before anything ever goes to main. Is this best practice?”\nAdvice: This system with the dev branch works so long as the dev doesn’t diverge too far from the main branch - the Ocean Health Index project (my old research team) does it that way but it’s someone’s job for a few weeks at the end of each year making sure the dev branch can merge into main.\nAnother approach is to treat each branch as very temporary: you make a branch from main, add your contribution, make a pull request, merge and delete the branch. This is what we’ve been doing with the NASA Mentors and it’s more continuous little updates rather than larger big updates, and I think it works better when working with Jupyter Notebooks, which can cause a lot of merge conflicts."
  },
  {
    "objectID": "core-lessons/github/github-pub.html",
    "href": "core-lessons/github/github-pub.html",
    "title": "GitHub for publishing",
    "section": "",
    "text": "GitHub is known as a place to store code, but it’s also a powerful publishing system. It is a way to help you share about your project on the open web, which lets you share about your science earlier."
  },
  {
    "objectID": "core-lessons/github/github-pub.html#preamble",
    "href": "core-lessons/github/github-pub.html#preamble",
    "title": "GitHub for publishing",
    "section": "Preamble",
    "text": "Preamble\nWe are going to work with GitHub from the browser only, because it makes the best use of our short time together. It is also a powerful way for folks to contribute and collaborate even if they are not involved in day-to-day hands-on analysis. So this might be good for new lab members or students to contribute to your lab as soon as possible.\nGitHub can reduce friction for open science: it gives us avenues for communicating and publishing methods, blogs, interactive graphics and more, without a lot of heavy lifting!\n\nPrerequisite\nYou will need to create GitHub account at http://github.com, if you don’t already have one. For username, I recommend all lower-case letters, short as you can. I recommend using your .edu email, since you can request free private repositories via GitHub Education discount."
  },
  {
    "objectID": "core-lessons/github/github-pub.html#what-is-github-traditional-answer",
    "href": "core-lessons/github/github-pub.html#what-is-github-traditional-answer",
    "title": "GitHub for publishing",
    "section": "What is GitHub? — Traditional answer",
    "text": "What is GitHub? — Traditional answer\nGitHub means GitHub.com; it’s a company that is an online collaborative platform, with some features familiar to social media users.\nGitHub centers around git, which is powerful version control software for your local computer. This has been around for years, taking care of bookkeeping for you locally on your computer.\nGitHub makes git’s local bookkeeping collaborative through its powerful online platform. It will weave together all the version control from your local computer with other collaborators you work with.\nIt is used for code and files: organize, archive, bookkeeping, searchable, changes visualized, etc. In the figure below, notice the familiar red and green to denote deletions and additions line-by-line, with darker shading to identify specific text within a line. Also notice the differencing in the image’s color bar!\n\n \nWe aren’t going to teach traditional git/GitHub today, but here are some recommendations if you’d like to learn. First, read Jenny Bryan’s “Excuse Me, Do You Have a Moment to Talk About Version Control?” (open-access pre-print from PeerJ, published in The American Statistican). This provides an excellent overview. One quote I like in particular is\n\nCollaboration is the most compelling reason to manage a project with Git and GitHub. My definition of collaboration includes hands-on participation by multiple people, including your past and future self, as well as an asymmetric model, in which some people are active makers and others only read or review. - Jenny Bryan, “Excuse Me, Do You Have a Moment to Talk About Version Control?”\n\nNext, to learn GitHub with R, the absolute best resource is Jenny Bryan’s Happy Git With R. This is a comprehensive, friendly step-by-step process of how to do so, and is an awesome reference for seasoned git/GitHub users as well. If you want a shorter-form resource, I’d recommend 2 tutorials from R for Excel Users. This also teaches you how to set up GitHub to sync directly through RStudio, so that you don’t have to have any other software (including the command line) open to do so:\n\nGitHub\nCollaborating with GitHub\n\nOn my local computer, I interact with GitHub through RStudio 99.9% of the time (use command line .1% of time)."
  },
  {
    "objectID": "core-lessons/github/github-pub.html#what-is-github-non-traditional-answer",
    "href": "core-lessons/github/github-pub.html#what-is-github-non-traditional-answer",
    "title": "GitHub for publishing",
    "section": "What is GitHub? — Non-traditional answer",
    "text": "What is GitHub? — Non-traditional answer\n\nPublishing platform\nIt’s for books like this one (openscapes.org/series), websites like openscapes.org, which was built with R’s blogdown package, and interactive dashboards.\n\n\nProject management system\nGitHub is also a project management system for short and long-term tasks. It is really powerful to have collaborative “todo”’s in the same software (and user accounts) as all the analysis and all the people that you’re already working with.\nWe will talk about “Issues” & “Projects” in the next chapter."
  },
  {
    "objectID": "core-lessons/github/github-pub.html#github-framework-in-a-nutshell",
    "href": "core-lessons/github/github-pub.html#github-framework-in-a-nutshell",
    "title": "GitHub for publishing",
    "section": "GitHub framework in a nutshell",
    "text": "GitHub framework in a nutshell\n\nUsers vs. organizations\nExample: jules32 is a user account, openscapes is an organization group.\nYou can think of them like other social media accounts: I can be an individual or part of a group, and there are permissions associated with both.\n\n\nRepositories (“repos”)\nRepos are GitHub’s main unit. They are essentially a folder, and you’ll put files and folders in them. They are contained, with permissions specific to each one.\nIt makes it easier to navigate through and find stuff — so you are “not sifting through a zoo of files” as one Openscapes Champion has said.\n\n\n“Commits” & “commit messages”\nUnlike Dropbox or Google Drive that constantly and automatically sync to the cloud, you have to deliberately tell git/GitHub when you have an amount of work that you want to be versioned and synced. You have to commit to telling them. GitHub takes care of the backend bookkeeping involved, but you have to write a human-readable message to your future self and others. That is the commit message.\nThere is no absolute guidance for how often to commit, but I think of it as leaving breadcrumbs for yourself. How much work and on what things/in what combination would you like to be able to reverse? What kind of information will make it easier for Future You to work with?\n\n\nPublic vs private\nYou can have both public (the free default) and private repositories, and change these permissions later on. I mostly work in public repos, but if I work in private ones, I often have the expectation that they will be made public some day. So I practice good habits with commits and documentation, and keep conversations on-topic.\n\n\nThe search feature is awesome\nYou are able to search within a GitHub repository, across repositories in an organization, or across all GitHub public repositories. I find this helps me find things quickly if I’m looking for how I’ve used a function in the past, or if I remember a word that would stand out that I included in a commit message as a breadcrumb to myself. It will also search Issues within the repositories, so you can look for specific words in conversations as well.\n\n\nBranches & Forks\nWe’re not going to talk about branches and forks. These are a core feature of what makes GitHub super powerful for software development, and one of the first things you’ll see in GitHub tutorials geared towards software engineers. But I do not think that is the most relevant or smoothest entryway for those of us who are scientists fairly new to collaborative coding and version control."
  },
  {
    "objectID": "core-lessons/github/github-pub.html#github-orientation",
    "href": "core-lessons/github/github-pub.html#github-orientation",
    "title": "GitHub for publishing",
    "section": "GitHub Orientation",
    "text": "GitHub Orientation\nThis is a demo details upcoming"
  },
  {
    "objectID": "core-lessons/github/github-pub.html#editing-files-from-github.",
    "href": "core-lessons/github/github-pub.html#editing-files-from-github.",
    "title": "GitHub for publishing",
    "section": "Editing files from GitHub.",
    "text": "Editing files from GitHub.\nThis is also a demo details upcoming\nFirst a Disclaimer: you don’t want to edit from the browser for most things – you would want to “clone” the repo to your local computer and leverage more goodies & power. However, you will sometimes edit in the browser, and it’s a good entry point for us today, and maybe for onboarding folks in your lab in the future.\nWhy not edit in the browser? You don’t want to overwrite each other or forget yourself. Good for quick md editing, not script editing.\nIn the demo, the example .md was a deliberate example of sharing slides from a talk :)\nWhat to do: (you all have permissions)\n\nGo to https://github.com/openscapes/demo/yourname.md\nClick on the pencil to edit your file\nMake many edits & commits with commit messages\n\ngithub.com has a default message, but get into the habit of writing an actual message to yourself/others (breadcrumbs)\n\nThis is different from saving (cancel if you save!)"
  },
  {
    "objectID": "core-lessons/github/github-pub.html#further-resources",
    "href": "core-lessons/github/github-pub.html#further-resources",
    "title": "GitHub for publishing",
    "section": "Further resources",
    "text": "Further resources\n\nGit for Humans - Alice Bartlett, 2016"
  },
  {
    "objectID": "core-lessons/index.html",
    "href": "core-lessons/index.html",
    "title": "Core Lessons",
    "section": "",
    "text": "“Better science” means science that is more open, reproducible, efficient, and also more diverse, equitable, inclusive, kind. And “future us” is ourselves, teams, communities in the next hour, week, decades – with a focus on onboarding ourselves and others to ongoing work.\nOur vision is a scientific culture that is more efficient and collaborative, and can uncover environmental solutions faster.\nThis Series is going to be fun and empowering! We will talk about a lot of tools and practices to make your science more streamlined. This is really powerful, cool stuff, and not just for data: we made and published this book using the tools and workflows we’ll talk about.\nThe first half of the Series focuses on efficiency and open culture within your team, and the second half is about sustained learning and bringing these practices to your broader communities."
  },
  {
    "objectID": "core-lessons/index.html#why-were-here",
    "href": "core-lessons/index.html#why-were-here",
    "title": "Core Lessons",
    "section": "Why we’re here",
    "text": "Why we’re here\nWe are passionate environmental scientists studying important, time-sensitive topics using data of all kinds. And we were never taught to work efficiently with data.\nWe are here because I know these files are on your computer — we all have them.\ndata_final_final.xls\ndata_final_usethis.xls\n...\nthesis_v16_new_ch1.docx\nthesis_v16.docx\n...\nAnd we also send and receive emails with subject lines like:\nRe:FWD:Fwd:Data question\nRe:Sending again with the correct version\nWe are going to talk about how to make the data experience better, for you, your lab, your department, and beyond.\nData analysis can be inefficient and demoralizing when you’re without the right tools/skills and you feel alone.\nBut! Open tools, practices, and communities exist that are powerful and empowering, and game-changing for science. And we can learn and use open practices for science.\nThey are like the Force from Star Wars:\n\nMore powerful than you ever imagined\nHelps you solve your current question powerfully – but also broadens the scope of the questions you can ask\nLearn from jedis, pass on what you have learned, have a ton of awesome allies (and not all allies are jedis)"
  },
  {
    "objectID": "core-lessons/index.html#what-to-expect",
    "href": "core-lessons/index.html#what-to-expect",
    "title": "Core Lessons",
    "section": "What to expect",
    "text": "What to expect\n\nThis is going to be fun and empowering!\nWe are going to be discussing a wide range of topics and working to seed habits for you to engage and learn with them with our lab and others on campus.\n\n\nExposure to relevant tools & practices, confidence & agency to engage, community to learn with\nThe plan is to expose you to a lot of great tools and practices that you can have confidence using in your research. We will also spend time helping you plan how to actually incrementally weave them into your existing workflows.\nThe point is not to overwhelm you or make you feel like it’s too late for you or that you would need to throw out and redo everything you’ve ever done in order to take the first step. No. By seeing what’s possible and how shared practices can make your own life easier, and life easier and more streamlined and fun with your lab and beyond, you’ll start experimenting with these practices and in a few years you will be working in a completely different way.\n\n\nCreate a shared culture – in your lab, on campus, and beyond\nWe’re going to go through a lot and it’s less important that you remember it all. More importantly, you’ll know what is possible, have confidence that you can do it, and have allies so you’re not alone. The main thing to take away is that there are good ways to approach your analyses; we will teach you to expect that so you can find what you need and use it! A theme throughout is that tools exist and are being developed by real, and extraordinarily nice, people to meet you where you are and help you do what you need to do. If you expect and appreciate that, you will be more efficient in doing your awesome science.\n\n\nNo skills required. We will strategize about general approaches, specific examples using R/RStudio and GitHub\nThere are no skills required to participate, and we will not be teaching hands-on how to code or set up databases. But we will be talking about how these are important and fit together in the big picture, and how to get started learning the skills you need. This is an opportunity to discuss existing tools and how to engage, meet other labs, discuss next steps, and stay accountable.\nWe’ll talk about tools and practices broadly, but also with specific examples using R and GitHub. Won’t that software eventually become outdated you say — is it worth learning them over something else? The answer is yes, software will change and become outdated; it always has. But seeing what is possible and becoming versed in embracing existing architecture and practices will set you up to make whatever transition comes, and you will make this transition with the community, not alone. Your skills will be transferrable skills as the actual software changes. Analogy: if you learn one musical instrument, you will be able to learn another one more fluidly than if you have never learned one to begin with because maybe you can read music, understand something about timing and rhythm, etc.\n\n\nEveryone is coming with different experiences & expectations\nEveryone in this workshop is coming from a different place with different experiences and expectations. But everyone will learn something new here, because there is so much innovation in the data science world. You are encouraged to ask questions and answer those of others.\n\n\nWe are all learning together\nThese tools are new to all of us, and the best ideas come from questions from anyone. If you are already familiar with some of this material, think about how your experience was learning it, and how you might teach it to others. Use these workshop materials not only as a reference in the future but also for talking points so you can communicate the importance of these tools to your communities. A big part of this Series is not only for you to learn these skills, but for you to also teach others and increase the value and practice of open data science in science as a whole.\n\n\nVulnerability: yes! Shame: no.\nShame is not allowed here. No “I’m 34 and haven’t learned GitHub, it’s too late for me” or any of that. We have never had the opportunity to learn these things, there should be no shame on your part for that. It takes a lot of time and dedicated effort to learn and employ these practices, and they should be valued and taught. That’s why you’re here now, you should be proud that you are taking the initiative and your time to do this. No shame.\nVulnerability, however, will be involved in this Series. Vulnerability is a big part of learning and trying new things — this is a safe place for everyone to learn. Vulnerability is taking stock of where you are now and help you map out where you want to be. Being vulnerable is scary. But it shouldn’t be lonely: we all have data confessions that would love to talk about and get help with, if only our scientific culture said that was OK; if only we knew how to articulate our questions and have someone to ask. This is a place to share our vulnerabilities to ignite real change. Ask questions. Whether it’s a keyboard shortcut or philosophy of data workflows, ask and let’s talk about it.\n\n\n\nEveryone is welcome here\nYou are all welcome here, please be respectful of one another. We are setting a tone of mutual respect and a space place for learning where we assume good intentions and interact with kindness and empathy. Pass it on."
  },
  {
    "objectID": "core-lessons/index.html#whats-possible-with-open-data-science-demo",
    "href": "core-lessons/index.html#whats-possible-with-open-data-science-demo",
    "title": "Core Lessons",
    "section": "What’s possible with open data science (demo)",
    "text": "What’s possible with open data science (demo)\n\nR for automation, visualizations\ngithub for collaborating (code, text)\nbookdown\nwebsites\ngithub for project management\n\norganize by project, i.e., keep that code and those methods in same parent folder, rather than all the R code you’ve ever written being in a giant folder, spanning projects\npublic & private issues, tagging people on commits, kaban board\n\n\nLive: fix a tpyo and republish the book/page"
  },
  {
    "objectID": "core-lessons/index.html#what-well-learn",
    "href": "core-lessons/index.html#what-well-learn",
    "title": "Core Lessons",
    "section": "What we’ll learn",
    "text": "What we’ll learn\n\nExpect that there is a better way\nSeeing what’s possible opens up what you expect. There is a bit of a chicken and egg issue here: you need to be exposed to things so you know what’s possible and what skills to develop, but you need to kind of know what to look for so you can absorb what you are exposed to.\n\n\nHave agency to find it\nBreak down that “I teach you learn” model. We are all here to learn and improve. Learning horizontally. \nThis series is not about micro-managing your science but about providing guidance & structure so that everyone in the lab is not silently struggling to reinvent the wheel and coming up with weird homegrown data approaches.\nWhat skills you should have and what you should be thinking of, along with some of the tools you can use. Will be building out the Resources page on the website for this purpose. And search the blogs.\n\n\nHave community to learn with\nNo more silently struggling & reinventing the wheel & creating weird, homegrown workarounds.\nEmbrace emerging and established community best practices\n\n\nIdentify what skills and tools you need, map next steps & learn"
  },
  {
    "objectID": "core-lessons/index.html#deliverables",
    "href": "core-lessons/index.html#deliverables",
    "title": "Core Lessons",
    "section": "Deliverables",
    "text": "Deliverables\naka Outcomes.\n\nBe champions for open data science (in your groups, departments, communities.)\nA more open culture in your group\n\ndedicated lab meetings to discuss data workflows\n\n“Seaside chats” (<- this is what we call them at OHI)\n\nstated code of conduct or lab group philosophy\nbeginnings of a lab roadmap of shared data workflows\n\nA growing community of practice on campus\n\nstudy groups / coding clubs (ex: Eco-Data-Science)\nhacky hours\n\n\n\nWhat would you do in a Seaside Chat?\nExample topics from the Ocean Health Index:\n\nLet’s have READMEs so we know what the heck things are\nSet up Zotero with RMarkdown\nFilepath woes: use .Rprojects\nWhere to put data – here’s how our server works\nFilepath woes 2: use the new here package!\nLet’s plan a lab “hackathon” to move these .xls to .csv files we store on Github\n\n\n\nWhat would you do in a Study Group?\nExample lessons from Eco-Data-Science (<- all lessons linked “previous sessions”)\n\nIntroduction to GitHub\nText analysis in R\nSpatial analysis in R\nFree websites with RMarkdown\nAnimated plots in R with ggplot2 & gganimate\nIntro to Python\n\n\n\nAssignments\nThere will be assignments between each call that should take about two hours over two weeks. Assignments are designed to be done during lab “Seaside chats”, weekly meetings to discuss data workflows and establish shared practices.\nAssigned after each call. Do them collaboratively during lab “Seaside chats”. They should take take 2 hours (over 2 weeks). Come prepared to debrief in the following Cohort Call!"
  },
  {
    "objectID": "core-lessons/index.html#additional-reading",
    "href": "core-lessons/index.html#additional-reading",
    "title": "Core Lessons",
    "section": "Additional reading",
    "text": "Additional reading\n\nPractical Computing for Biologists. Introduction to the Terminal/command line, introduction to regular expressions. Chapter 2 alone is incredibly powerful\nVirtual meetings\n\nhttps://opensource.com/article/20/6/remote-meetings\nhttps://aspirationtech.org/blog/virtualmeetingpowerdynamics"
  },
  {
    "objectID": "core-lessons/better-science.html",
    "href": "core-lessons/better-science.html",
    "title": "Better science in less time",
    "section": "",
    "text": "Better science is less time is science that is more efficient, reproducible, open, inclusive, and kind. There are growing examples of better science in less time in environmental and Earth science, and beyond, including Our path to better science in less time using open data science tools (Lowndes et al. 2017).\nSlides that have been presented during Champions Program Cohort Calls:\nHere we also introduce the Pathways concept that teams will develop throughout the Champions program. The Pathway is based on Table 1 in Lowndes et al. 2017, and helps teams deliberately identify data workflow practices and next steps to facilitate efficiency and open culture in terms of reproduciblity, collaboration, communication, and culture."
  },
  {
    "objectID": "core-lessons/better-science.html#pathways-better-science",
    "href": "core-lessons/better-science.html#pathways-better-science",
    "title": "Better science in less time",
    "section": "Pathways to better science in less time",
    "text": "Pathways to better science in less time\nFigure 1 of Lowndes et al. 2017 shows that open data science tools increased the ease of reproducibility and the ease of collaboration for the Ocean Health Index (OHI) team. But it was not the tools alone - it was the process the team co-created and prioritized.\n\nCreate space\nThe OHI team created space for synchronous collaboration: convenings to learn and teach each other together.\nA critical first part of this was prioritizing time (which included getting buy-in, lobbying, showcasing). Then, this meant that the team could focus time on:\n\nGetting comfortable talking about data/workflows\nBuilding trust (to share imperfect work)\nRecognizing that what we invest incrementally will have large dividends in the future\n\nThe OHI team started having “Seaside Chats”: 1x/week where they discussed filenaming, code review, standard operating procedures and documentation, and much more.\n\n\nCreate place\nCreating place is critical for asynchronous collaboration. This includes GitHub Organizations, Repositories, Issues; Google Drive Folders, Docs, Spreadsheets, and Slides; Slack Organizations and Channels; JupyterHubs, etc.\nIt is a place for code, shared practices, resources, conversations. Critically, this involves making sure that everyone on the team is comfortable contributing through these channels. This means both with the technology, and the culture of the team.\n\n\nFind the common\nThrough creating space and place, teams will find the common workflows, tools, skills that they already have and need to do their work.\nFor the OHI team, we asked how to make sure everyone can participate as they need to? We introduced new software sparingly, and helped each other learn. This included initial setup as well as follow up and practice. We leveraged existing habits & resources - within and beyond our team. Open communities were a big part of this learning. Through this we were able to distinguish data preparation (tidying) as distinct from our science, and make this actionable by shifting to smaller modular code to combine for different reports/audiences.\nDocumentation was a key part of this. And, writing documentation “for nobody” is very hard, and it’s a huge task. We prioritized documentation based on Onboarding and Offboarding: for our future selves first, and then future us.\n\n\nWhat was it really like? Transition to GitHub\nChanging behavior/habits takes time, and is messy. Here is part of the story:"
  },
  {
    "objectID": "core-lessons/better-science.html#ocean-health-index-behind-the-scenes",
    "href": "core-lessons/better-science.html#ocean-health-index-behind-the-scenes",
    "title": "Better science in less time",
    "section": "Ocean Health Index: behind the scenes",
    "text": "Ocean Health Index: behind the scenes\nSome key points to discuss from Lowndes et al. 2017, Nature Ecology & Evolution: Our path to better science in less time using open data science tools:\n\nReproducibility & communication enabled by open tooling\nShared practices are useful beyond shared projects\n\nIf you’re interested in more overview of the OHI setup, see this 2017 talk (25 mins): OHI Better science in less time\n\nOHI pathway\n\nMotivated by necessity\nReimagined by possibility and community\nDone incrementally!\nYes: it’s an investment.\nAlso yes: huge, enduring payoff for (your) science\n\n\n\nReproducibility & communication enabled by open tooling\nRMarkdown to reimagine data analysis and communication. RMarkdown combines analyses & figures together, rendered to your reporting output of choice.\nAn example: http://ohi-science.org/betterscienceinlesstime/\n\nWebsite built with R/RMarkdown & Github\n\nYou can get started too: (1-hour tutorial)\n\n\n\nShared workflows not only useful for shared projects\n\nOHI team: we identified as a team & prioritized helping each other\n\nWe work on many different projects\nUse same workflows, share feedback, can think together across projects\n\nShared conventions reduce friction & cognitive load\n\nCommon ground, easier to talk about, easier to ask for help\nYou don’t need to design everything from scratch\n\n\nAnd, critically:\n\nIt’s about increasing efficiency and reproducibility and open science.\nBut it is also about increasing participation and inclusion.\nConsider diversity, equity, and inclusion in your daily practices.\nHow you work and onboard others to your projects is a DEI issue."
  },
  {
    "objectID": "core-lessons/better-science.html#examples-environmental-science",
    "href": "core-lessons/better-science.html#examples-environmental-science",
    "title": "Better science in less time",
    "section": "Examples: environmental science",
    "text": "Examples: environmental science\nHere are a few examples to showcase what is possible and being done by the community.\n\nRegime Shifts in R & Data Science within the BC Public Service Observations from the field - Stephanie Hazlitt, Government of British Columbia, slides from CascadiaRconf keynote\nNMFSReports: Easily write NOAA reports and tech memos in R Markdown! - Emily Markowitz, NOAA Alaska Fisheries Science Center, slides from CascadiaRconf talk\nAutomated reporting in Tampa Bay with open science - Marcus Beck, Tampa Bay Estuary Program, Openscapes blog\n\nTBEP’s Data Management Workflow and open science cake\n\nRegime Shifts in R & Data Science within the BC Public Service - Steph Hazlitt CascadiaR keynote (tweet)"
  },
  {
    "objectID": "core-lessons/better-science.html#further-resources",
    "href": "core-lessons/better-science.html#further-resources",
    "title": "Better science in less time",
    "section": "Further resources",
    "text": "Further resources\n\nNot so standard deviation podcast\nParker & Peng\nhttp://nssdeviations.com\nGreat discussions about data concepts and “in the wild”\nEpisode 9: Spreadsheet drama\n\n\nPractical computing for biologists\nHaddock & Dunn\nhttp://practicalcomputing.org/\nSoftware & computing concepts already on your computer\nChapter 2: Regular expressions"
  },
  {
    "objectID": "additional-lessons/code-of-conduct.html",
    "href": "additional-lessons/code-of-conduct.html",
    "title": "Code of Conduct",
    "section": "",
    "text": "Please see accompanying slides until this chapter is built out more.\nPlease also refer to Openscapes’ Code of Conduct: https://openscapes.org/code-of-conduct\nImportant for:"
  },
  {
    "objectID": "additional-lessons/code-of-conduct.html#code-of-conduct-also-known-as",
    "href": "additional-lessons/code-of-conduct.html#code-of-conduct-also-known-as",
    "title": "Code of Conduct",
    "section": "Code of Conduct also known as",
    "text": "Code of Conduct also known as\nCommunity Participation Guidelines\nCode of Practice\nSimilar ideas:\nLab philosophy, mission statement, participation agreements"
  },
  {
    "objectID": "additional-lessons/code-of-conduct.html#requirements",
    "href": "additional-lessons/code-of-conduct.html#requirements",
    "title": "Code of Conduct",
    "section": "Requirements",
    "text": "Requirements\n\nClear explicit statements\nSeen and heard – that all participants know about\n\nAccessible and discoverable online\nMentioned aloud in meetings/interviews/onboarding\n\nAvenues for action, identified committees, recusals"
  },
  {
    "objectID": "additional-lessons/code-of-conduct.html#case-study-ropensci",
    "href": "additional-lessons/code-of-conduct.html#case-study-ropensci",
    "title": "Code of Conduct",
    "section": "Case study: rOpenSci",
    "text": "Case study: rOpenSci\nCoC itself\nBlog post about the CoC\nBlog post about creating the CoC — following a community call on the topic. Interesting points:\n\nDrafting – make it good and revisit; but not a living doc\nAdopting and sharing – so people know it exists & where to find it\nReporting and enforcing – standardized form can help"
  },
  {
    "objectID": "additional-lessons/code-of-conduct.html#examples-to-build-from",
    "href": "additional-lessons/code-of-conduct.html#examples-to-build-from",
    "title": "Code of Conduct",
    "section": "Examples to build from",
    "text": "Examples to build from\n\nrOpenSci CoC\n\nBuffer’s CoC & Why It’s Important For Diversity And Inclusion\nMozilla Community Participation Guidelines\nTemplate CoC for labs"
  },
  {
    "objectID": "additional-lessons/code-of-conduct.html#further-reading",
    "href": "additional-lessons/code-of-conduct.html#further-reading",
    "title": "Code of Conduct",
    "section": "Further Reading",
    "text": "Further Reading\n\nHow Codes of Conduct Are Combatting Open Source’s Diversity Problem — Margaret Rhodes, AIGA Eye on Design"
  },
  {
    "objectID": "additional-lessons/r-for-scicomm.html",
    "href": "additional-lessons/r-for-scicomm.html",
    "title": "RMarkdown for scicomm",
    "section": "",
    "text": "Coming soon. Slides are best until then. See also Data science as an entryway to open publishing - May 27, 2020: Fireside Chat co-presented with Dr. Nick Tierney at Open Publishing Fest\nSo much potential for public communication, lab protocols and documents, etc. with R.\nAll based on RMarkdown."
  },
  {
    "objectID": "additional-lessons/r-for-scicomm.html#books-with-bookdown",
    "href": "additional-lessons/r-for-scicomm.html#books-with-bookdown",
    "title": "RMarkdown for scicomm",
    "section": "books with bookdown",
    "text": "books with bookdown\nCommit the generated docs/ directory!\nThen, change the setting in your repo on github.com so that github knows where your book is located so it can publish it. Here’s what to do:\n\ngo to https://github.com/haudarren/ai_handbook\nclick on settings at the top bar (at the opposite end from code, issues, pull requests)\nscroll down to the GitHub pages section. Click on Source and change it so it reads master branch /docs folder like below. You should get a green band like below that says “your site is published to username.github.io/reponame”"
  },
  {
    "objectID": "additional-lessons/r-for-scicomm.html#websites-with-rmarkdown",
    "href": "additional-lessons/r-for-scicomm.html#websites-with-rmarkdown",
    "title": "RMarkdown for scicomm",
    "section": "websites with RMarkdown",
    "text": "websites with RMarkdown\nsimple, static"
  },
  {
    "objectID": "additional-lessons/r-for-scicomm.html#websites-with-blogdown",
    "href": "additional-lessons/r-for-scicomm.html#websites-with-blogdown",
    "title": "RMarkdown for scicomm",
    "section": "websites with Blogdown",
    "text": "websites with Blogdown\nfancier, dynamic"
  },
  {
    "objectID": "additional-lessons/r-for-scicomm.html#further-resources",
    "href": "additional-lessons/r-for-scicomm.html#further-resources",
    "title": "RMarkdown for scicomm",
    "section": "Further resources",
    "text": "Further resources\n\nRMarkdown - RStudio (2021)\nHow I teach RMarkdown - Hill (2020)\nR Markdown for scientists - Tierney (2020)\nR for Excel Users - Lowndes & Horst (2020)\nRMarkdown website tutorial - Lowndes (2016)\nAcademic Publications with R Markdown- Ovando 2020"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Openscapes Champions Lesson Series",
    "section": "",
    "text": "Hello! This is the lesson series for the Openscapes Champions program, an open data science mentorship program for science teams. We think about open science like a landscape, and we help researchers move from lonely science towards team science as they identify their common needs and start navigating the landscape together with a cohort of their peers.\n\n\n\nArtwork by Allison Horst\n\n\n\nThis open curriculum is improved iteratively and the most recent version always available online for reuse and remix. Each chapter in the Core Lesson Series introduces the concepts, tooling, and examples that we discuss during our Champions Program Cohort Calls. We’re also organizing additional Champions Lessons, Community Lessons, and How To guides to support Champions teams that you can navigate to on the left.\n\n\nResearch teams participate as a Champions Cohort over 2 months, meeting twice-monthly for five 1.5-hour sessions we call Cohort Calls.\nCohort Calls are designed to be engaging, requiring discussion and active participation through shared live notetaking in Google Docs and group/breakout-group discussions. We explore open data science concepts, tooling, and examples together through slides that accompany each chapter of this book. Core lessons focus on building an open science mindset, efficiency and sharing culture within the team, and developing sustained learning practices with broader communities. At the end of the program, each team describes their work in progress and pathways forward.\n\n\n\nCohort Call Topics\nSeries Chapters\nSeaside Chat Topics\n\n\n\n\n1. Openscapes mindset, better science in less time\nmindset, better science in less time\nPathway - where are you now\n\n\n2. GitHub Clinic: publishing & project management\npublishing, project management\nShared organizing with GitHub\n\n\n3. Team culture and data strategies for future us\nteam culture, data strategies\nOnboarding docs, code of conduct\n\n\n4. Open communities and coding strategies for future us\nopen communities, coding strategies\nPathway - next steps\n\n\n5. Pathways share and next steps\n\n\n\n\n\n\n\n\nBetween Cohort Calls, each team meets together for Seaside Chats - dedicated time for data/workflow discussions. This is where teams begin identifying and addressing shared needs, prompted by discussions as a cohort and using the Pathways Concept. Seaside Chats have been described by participants as one of the most valuable parts of the Champions Program because it helps strengthen habits and culture of shared workflows and learning. Additionally, we support teams between Cohort Calls through Co-Working sessions and Slack.\n\n\n\nCohort Call agendas and slides are all openly available in a Google Folder, ready for reuse and remix. We end each lesson by learning hands-on efficiency tips (Doc and Spreadsheet) and inclusion tips.\n\n\n\nOur POP, a planning tool that we learned from Mozilla, describes the Purpose, Outcomes, and Purpose.\nPurpose is to: Reimagine data analysis and stewardship through exploring open tools and practices; Develop modern skills and habits that are of immediate value to you, including confidence and agency as leaders; Cultivate collaborative and inclusive research communities: Future Us, starting with your team.\nOutcomes are: Different for everybody - this is about changing habits to improve your work and teamwork so you shape where you invest based on what you need; A practice of talking and collaborating about data workflows with your team and community; A pathway you’ve identified with your team to help prioritize next steps - You’ll share your work-in-progress on our last Cohort Call\nProcess is: Cohort Calls: Twice-monthly with full Cohort; discussion-based and requires active engagement; Seaside Chats: Alternating weeks with your research group; we’ll provide task suggestions but main purpose is to build the habit of strengthening shared workflows with your broader group. Team leads optional; Co-working: Alternating weeks (optional); come to focus on something workflow related - could be quiet work, requests for feedback or questions, or screensharing to problem solve; Slack: asynchronous way to ask questions, get help, and get to know other Openscapes folks; Twitter: asynchronous way to connect with broader open science community - check out #rstats, #openscience, @openscapes\n\n\n\nThere is a lot of flexibility in choosing your team for the Openscapes Champions program.\n\nHow you define “team” is completely up to you and having one person be in the cohort and using in-between session “seaside chats” to bring back the information to another group is 100% fine. That is common in the cohorts. In my first Openscapes cohort, I was the only person from my project. My personal goal was to use the Openscapes structure to help a team that I am on figure out how to tackle some off-boarding tasks due to a retirement. During my second cohort, there were 2 team members in the cohort and 2 not in the cohort. We focused on standardizing our data to get ready for our GitHub served data package. For the 3rd cohort I am doing, 2/3 of our team is in the cohort as we start to get organized for a major revamp of our report into a reproducible workflow. - Eli Holmes (NOAA NWFSC, NMFS-Openscapes)\n\nLearn more: FAQs: What is a team/How do I choose my team?."
  },
  {
    "objectID": "index.html#cohorts---past-and-upcoming",
    "href": "index.html#cohorts---past-and-upcoming",
    "title": "Openscapes Champions Lesson Series",
    "section": "Cohorts - past and upcoming",
    "text": "Cohorts - past and upcoming\nWe have led 8+ Champions Cohorts since 2019. Starting in 2021, each Cohort has an events page with links to their GitHub repository (with quick-links to their Cohort Call Agendas so teams can more easily review), blog posts and any additional resources. Explore more at openscapes.org/cohorts."
  },
  {
    "objectID": "index.html#supercharge-your-research-self-paced-learning",
    "href": "index.html#supercharge-your-research-self-paced-learning",
    "title": "Openscapes Champions Lesson Series",
    "section": "Supercharge your research: self-paced learning",
    "text": "Supercharge your research: self-paced learning\nAll Champions Program resources are designed to also be a self-paced learning resource for teams. Additionally see Supercharge your research: a ten-week plan for open data science (Lowndes et al. 2019) and accompanying spreadsheet template that you can use to get organized with your team.\nSee also other publications and presentations at openscapes.org/media."
  },
  {
    "objectID": "index.html#about",
    "href": "index.html#about",
    "title": "Openscapes Champions Lesson Series",
    "section": "About",
    "text": "About\nOpenscapes helps researchers reimagine data analysis, develop modern skills that are of immediate value to them, and cultivate collaborative and inclusive research teams. Our work builds from many others in the open movement, and we are also documenting our process to onboard folks and scale Openscapes in our Approach Guide.\n\nOpenscapes Champions\nOpenscapes Champions is a professional development and leadership opportunity for teams to reimagine data analysis & stewardship as a collaborative effort, develop modern skills that are of immediate value to them, and cultivate collaborative and inclusive research communities. Cohorts are ~7 research teams (~35 total participants including team leads and members) that convene remotely to explore open data science tooling and practices together. This is a remote-by-design program since its launch in 2019.\nCore lessons were originally developed from “Our path to better science in less time using open data science tools” (Lowndes et al. 2017). As we learn and iterate leading Champions Cohorts, the curriculum is iterating and growing as well.\n\n\nThis Series Book\nThe Series is written (and always improving) to be used as a reference, to teach, as self-paced learning, and for reuse and remix. And also, awesomely, it’s created with the same tools and practices we will be talking about: R/RStudio - originally bookdown and now quarto - and GitHub.\n\n\nCitation\nAll material in the Openscapes Approach Guide is available under a CC-BY 4.0 licence.\nPlease cite this guide as:\nThe Openscapes Core Team, Lowndes & Robinson (2021). Openscapes Champions Lesson Series (Version v0.0.1). https://openscapes.org/series.\n\n\n  Openscapes is licensed under a Creative Commons Attribution 4.0 International License."
  },
  {
    "objectID": "coding-strategies.html",
    "href": "coding-strategies.html",
    "title": "Coding strategies for future us",
    "section": "",
    "text": "Coding strategies can blend with workflow strategies, and the idea is working in a way that is not just for you in this moment. Here we will discuss good coding practices for beginning and seasoned coders alike that make it easier to work with other people, times, and computers.\nSlides that have been presented during Champions Program Cohort Calls (with guest teachers indicated):"
  },
  {
    "objectID": "coding-strategies.html#software-considerations-for-coding",
    "href": "coding-strategies.html#software-considerations-for-coding",
    "title": "Coding strategies for future us",
    "section": "Software considerations for coding",
    "text": "Software considerations for coding\nThe following advice is from Tiffany Timbers, UBC Data Science, Intro to Reticulate:\nYou will need these software tools:\n\nProgramming language (R, python)\nCode editor (RStudio IDE, Jupyter)\nVersion control software (git, GitHub/bitbucket)\n\nHow to choose the “best” tool for the job:\n\nReproducible and auditable\nAccurate\nCollaborative (and portable)\n\nIf you’re choosing between R, Python, and other modern languages, they will aready be reproducible, auditable, and accurate. That leaves collaboration – what do your collaborators use? What do folks in your lab, or field use? What is mentioned in the papers you read? There is increasing interoperability between languages (e.g. see reticulate to run python code from R) so when you have some idea it’s best to get started!\nSee also: Opinionated analysis development (Parker 2017). Tools like RStudio are already doing this to help you. Reserve your mental energy for the fun part of the analysis!"
  },
  {
    "objectID": "coding-strategies.html#wtf-what-they-forgot-to-teach-you",
    "href": "coding-strategies.html#wtf-what-they-forgot-to-teach-you",
    "title": "Coding strategies for future us",
    "section": "WTF: What They Forgot to teach you",
    "text": "WTF: What They Forgot to teach you\nMost of this advice comes directly from Jenny Bryan & Jim Hester’s awesome course What they Forgot to Teach You About R. I highly recommend reading Chapters 1-4 that go into much better detail than the notes here. The advice here is solid coding practices for any language, with examples from R.\n\nWorkflow versus product\nDistinction between things you do because of personal taste & habits (“workflow”) versus the logic and output that is the essence of your project (“product”).\nWorkflow:\n\nEditor you use to write code.\nName of your home directory.\nR code you ran before lunch.\n\nClearly product: - Raw data. - R code someone needs to run on your raw data to get your results, including the explicit library() calls to load necessary packages. (script, notebook)\nIdeally, you don’t hardwire anything about your workflow into your product."
  },
  {
    "objectID": "coding-strategies.html#source-files",
    "href": "coding-strategies.html#source-files",
    "title": "Coding strategies for future us",
    "section": "Source files",
    "text": "Source files\nWhat are they and why?\nCode that creates objects is “source code”. Source code is essentially text files you edit in a text editor that is then executed in the console.\nExamples:\n\n.R, .Rmd\n.py\n.m\n\n\nSave the source, not the workspace\nSave the source code; do not save the R object itself.\nSave your commands as “scripts” (.R, .py) or “notebooks” (.Rmd, ipynb). It doesn’t have to be polished. Just save it!\nEverything that really matters should be achieved through code that you save – including objects and figures The contrast is storing them implicitly or explicitly, as part of an entire workspace, or clicking via the mouse.\nLoad libraries/packages at the top. Just like a recipe: tell us the ingredients need before we get going!\n\n\nAlways start R with a blank slate\nSaving code is an absolute requirement for reproducibility.\nWhen you quit, do not save the workspace to an .Rdata file. When you launch, do not reload the workspace from an .Rdata file.\nIn RStudio, set this via Tools > Global Options.\n\n\nRestart R often during development\n\n“Have you tried turning it off and then on again?” – timeless troubleshooting wisdom, applies to everything\n\nIf you use RStudio, use the menu item Session > Restart R\nAdditional ways to restart development where you left off, i.e. “re-run all the code up to HERE”\n\n\nAvoid rm(list = ls())\nIt’s common to see scripts begin with this object-nuking command: rm(list = ls())\nThis is highly suggestive of a non-reproducible workflow.\nThe problem with rm(list = ls()) is that, given the intent, it does not go far enough.\nIt only deletes user-created objects from the global workspace.\nInstead, Restart R with a clean slate OFTEN (e.g. many times/day), and write every script assuming it will be run in a fresh R process"
  },
  {
    "objectID": "coding-strategies.html#filepaths",
    "href": "coding-strategies.html#filepaths",
    "title": "Coding strategies for future us",
    "section": "Filepaths",
    "text": "Filepaths\nEvery saved thing gets a unique path.\nYour code needs to run from somewhere specific. And when it interacts with other things (data or other code), you need to tell your code where things are.\nThe more deliberate you are about where things live,\n\nThe easier it will be for you and future you\nThe easier it will be for other people\nThe easier it will be on another computer\n\n\nsetwd(“path/that/only/works/on/my/machine”)\nThe chance of setwd() having the desired effect – making the file paths work – for anyone besides its author is 0%.\nIt’s also unlikely to work for the author one or two years or computers from now.\nHard-wired, absolute paths, especially when sprinkled throughout the code, make a project brittle. Such code does not travel well across time or space.\n\n\nsetwd()\nBUT, if you still decide to use setwd() in your scripts, you should at least be very disciplined about it:\nOnly use setwd() at the very start of a file, i.e. in an obvious and predictable place.\nAlways set working directory to the same thing, namely to the top-level of the project. Always build subsequent paths relative to that.\n\n\nR users: use the here package\nhere() identifies your project’s files, based on the current working directory at the time when the package is loaded.\nlibrary(here)\nhere()"
  },
  {
    "objectID": "coding-strategies.html#project-oriented-workflows",
    "href": "coding-strategies.html#project-oriented-workflows",
    "title": "Coding strategies for future us",
    "section": "Project oriented workflows",
    "text": "Project oriented workflows\n\nDilemma and Solution\nProblem statement:\nWe want to work on project A with the working directory set to path/to/projectA (my data analysis) and on project B with the working directory set to path/to/projectB (my teaching material).\nBut we also want to keep code like setwd(“path/to/projectA”) out of our scripts.\nSolution:\nSolution: use an IDE that supports a project-based workflow.\nAn integrated development environment (IDE) offers:\n\na powerful, R-aware code editor\nmany ways to send your code to a running R process\nother modern conveniences\n\nAnd it eliminates:\n\ntemptation to develop code directly in the Console. (instead:.R!)\ntension between development convenience and portability of the code.\n\n\n\nOrganize your work into projects\nHere’s what I mean by “work in a project”:\n\nFile system discipline: put all files related to a project in a designated folder.\n\nThis applies to data, code, figures, notes, etc.\nDepending on project complexity, you might enforce further organization into subfolders.\n\nWorking directory intentionality: when working on project A, make sure working directory is set to project A’s folder.\n\nIdeally, this is achieved via the development workflow and tooling, not by baking absolute paths into the code.\n\nFile path discipline: all paths are relative — relative to the project’s folder.\n\nSynergistic habits: you’ll get the biggest payoff if you practice all of them together.\nPortability: the project can be moved around on your computer or onto other computers and will still “just work”. is the only practical convention that creates reliable, polite behavior across different computers/users/time. This convention is neither new, nor unique to R.\nIt’s like agreeing that we will all drive on the left or the right. A hallmark of civilization is following conventions that constrain your behavior a little, in the name of public safety.\n\n\nRStudio Projects\nThe RStudio IDE has a notion of a (capital “P”) Project, which is a very effective implementation of (small “p”) projects.\nProject have an.Rproj file in the folder, which is used to store settings specific to that project. Use File > New Project … to get started.\nAllows for multiple projects\nno danger of crosstalk: each has own R process, global workspace & working directory\nSame “unit” as a GitHub repo!\n\n\nTips for RStudio Projects\nOne suggestion for organizing:\nHave a dedicated folder for your Projects. - If you have One Main Place for Projects, then go there in Finder/File Explorer to launch any specific project with .Rproj. - Mine is called “~/github/”.\nSwitching Projects: RStudio knows about recent Projects.\n\n\nName files deliberately\nJenny Bryan’s 3 rules for Naming Things:\n\nmachine readable\nhuman readable\nplays well with default ordering\n\nAvailable from Speakerdeck"
  },
  {
    "objectID": "coding-strategies.html#further-reading",
    "href": "coding-strategies.html#further-reading",
    "title": "Coding strategies for future us",
    "section": "Further reading",
    "text": "Further reading\n\nTidyverse Skills for Data Science - Wright, Ellis, Hicks, & Peng\nPrinciples for data analysis workflows - Stoudt, Vasquez, and Martinez 2021, PLOS Computational Biology\nR Cookbook — JD Long"
  },
  {
    "objectID": "data-strategies.html",
    "href": "data-strategies.html",
    "title": "Data strategies for future us",
    "section": "",
    "text": "Data strategies are part of a shared workflow strategy: How do we structure data, where do we store and back up data, how do we create metadata, and keep the raw data raw…Here we will discuss personal and team habits for data management and sharing: data strategies for future us.\nSlides that have been presented during Champions Program Cohort Calls (with guest teachers indicated):"
  },
  {
    "objectID": "data-strategies.html#data-organization-in-spreadsheets",
    "href": "data-strategies.html#data-organization-in-spreadsheets",
    "title": "Data strategies for future us",
    "section": "Data organization in spreadsheets",
    "text": "Data organization in spreadsheets\nThis publication by Broman & Woo, 2018 appears in the “Practical Data Science for Stats” collection in PeerJ & American Statistician.\nIt is a delightful read, from the first opening sentences:\n\n“Spreadsheets, for all of their mundane rectangularness, have been the subject of angst and controversy for decades.… Amid this debate, spreadsheets have continued to play a significant role in researchers’ workflows. The dangers of spreadsheets are real, however – so much so that the European Spreadsheet Risks Interest Group keeps a public archive of spreadsheet ‘horror stories’…”\n\nBroman & Woo share practical tips to make spreadsheets less error-prone, easier for computers to process, and easier to share. And something incredibly cool, it’s the 3rd most downloaded stats paper in the American Statistician, behind 2 papers about p-values (twitter thread).\nRead their paper for strategies behind their basic principles:\n\nBe consistent\nWrite dates like YYYY-MM-DD\nDon’t leave any cells empty\nPut just one thing in a cell\nOrganize data as a rectangle (“Tidy data”)\nCreate a data dictionary\nDon’t include calculations in the raw data files\nDon’t use font color or highlighting as data\nChoose good names for things\nMake backups\nUse data validation to avoid data entry errors\nSave the data in plain text files"
  },
  {
    "objectID": "data-strategies.html#good-enough-practices-in-scientific-computing.",
    "href": "data-strategies.html#good-enough-practices-in-scientific-computing.",
    "title": "Data strategies for future us",
    "section": "Good enough practices in scientific computing.",
    "text": "Good enough practices in scientific computing.\nThis publication by Wilson et al. 2017 in PLoS Computational Biology follows a previous publication by Wilson et al. 2014: Best practices for scientific computing.\nIn terms of data management recommendataion, they have 2 main themes:\n\nwork towards ready-to-analyze data incrementally, documenting both the intermediate data and the process\nembrace the idea of “tidy data”, which can be a powerful accelerator for analysis\n\nRead their paper for strategies behind their basic principles (Box 1):\n\nSave the raw data.\nEnsure that raw data are backed up in more than one location.\nCreate the data you wish to see in the world.\nCreate analysis-friendly data.\nRecord all the steps used to process data.\nAnticipate the need to use multiple tables, & use a unique identifier for every record.\nSubmit data to a reputable DOI-issuing repository so that others can access & cite.\n\nThe publication also covers:\n\nSoftware: write, organize, and share scripts and programs used in an analysis.\nCollaboration: make it easy for existing and new collaborators to understand & contribute to a project.\nProject organization: organize the digital artifacts of a project to ease discovery & understanding.\nTracking changes: record how various components of your project change over time.\nManuscripts: write manuscripts in a way that leaves an audit trail & minimizes manual merging of conflicts."
  },
  {
    "objectID": "data-strategies.html#tidy-data-for-efficiency-reproducibility-collaboration",
    "href": "data-strategies.html#tidy-data-for-efficiency-reproducibility-collaboration",
    "title": "Data strategies for future us",
    "section": "Tidy data for efficiency, reproducibility, & collaboration",
    "text": "Tidy data for efficiency, reproducibility, & collaboration\nBy Lowndes & Horst 2020, posted on the Openscapes blog: an illustrated series to tell a story about tidy data.\nTidy data has been mentioned in each of the above, as a way to organize data in spreadsheets, to prepare ready-to-analyze data, and for sharing with the FAIR principles.\nSo what is tidy data?\nFirst, a preamble:\n\nRaw data may not be stored in a tidy way\n“Wrangling” data into tidy structure should be done programmatically as part of the analytical process - keep the raw data raw\nTidy data is a philosophy\nThere are existing tools to help\n\nRemember that “tidying data (“data wrangling”) – up to 50–80% of a data scientist’s time” Lohr 2014, New York Times, so it’s important to leverage these existing philosophies and tools.\nWhen we talk about organizing data to help us work in an efficient, reproducible, and collaborative way, we are talking about TIDY DATA. We mean deliberately thinking about the shape and structure of data – something that might not seem super exciting but is truly game-changing.\nSo let’s talk about what tidy data is and why it is so empowering for your analytical life.\n\nWhat is tidy data?\nTidy data is a way to describe data that’s organized with a particular structure – a rectangular structure, where each variable has its own column, and each observation has its own row (Wickham 2014).\n\n\n\n\nThis standard structure of tidy data led Hadley Wickham to describe it the way Leo Tolstoy describes families. Leo says “Happy families are all alike; every unhappy family is unhappy in its own way”. Similarly, Hadley says “tidy datasets are all alike, but every messy dataset is messy in its own way”.\n\n\n\n\n\n\nTidy data for more efficient data science\nTidy data allows you to be more efficient by using existing tools deliberately built to do the things you need to do, from subsetting portions of your data to plotting maps of your study area. Using existing tools saves you from building from scratch each time you work with a new dataset (which can be time-consuming and demoralizing). And luckily, there are a lot of tools specifically built to wrangle untidy data into tidy data (for example, in the tidyr package). By being more equipped to wrangle your data into a tidy format, you can get to your analyses faster to start answering the questions you’re asking.\n\n\n\n\n\n\nTidy data for easier collaboration\nTidy data makes it easier to collaborate because our friends can use the same tools in a familiar way. Whether thinking about collaborators as current teammates, your future self, or future teammates, organizing and sharing data in a consistent and predictable way means less adjustment, time, and effort for all.\n\n\n\n\n\n\nTidy data for reproducibility and reuse\nTidy data also makes it easier to reproduce analyses because they are easier to understand, update, and reuse. By using tools together that all expect tidy data as inputs, you can build and iterate really powerful workflows. And, when you have additional data entries, it’s no problem to re-run your code!\n\n\n\n\n\n\nTidy data for the win!\nOnce you are empowered with tools to work with tidy data generally, it opens up a whole new world of datasets that feel more approachable because you can work using familiar tools. This transferrable confidence and ability to collaborate might be the best thing about tidy data.\n\n\n\n\nSo for more efficient, reproducible, and collaborative analyses, make friends with tidy data!"
  },
  {
    "objectID": "data-strategies.html#learning-resources",
    "href": "data-strategies.html#learning-resources",
    "title": "Data strategies for future us",
    "section": "Learning Resources",
    "text": "Learning Resources\n\nGrolemund, G & Wickham, H (2016). R for Data Science: https://r4ds.had.co.nz\n\nSee Ch 12: Tidy Data\n\nWickham, H (2014). Tidy Data. Journal of Statistical Software 58 (10). jstatsoft.org/v59/i10/\nBroman, KW and KH Woo (2018). Data Organization in Spreadsheets. The American Statistician 72 (1). Available open access as a PeerJ preprint.\nLeek, J (2016). How to share data with a statistician"
  },
  {
    "objectID": "inspiration/resources-that-influence.html",
    "href": "inspiration/resources-that-influence.html",
    "title": "Openscapes Champions Series",
    "section": "",
    "text": "Some resources that influence our thinking.\n\n\n\nRStudio::conf(2020) keynote & NSSD podcast episode 100\n\nIf you want to write, you read a lot, music, you listen a lot. I’ts hard to do this with data analysis.\n\n\n\n\n\n\n\nStoudt, Vásquez, Martinez, https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1008770\n\nworkflow describes what a researcher does to make advances on scientific ques- tions: developing hypotheses, wrangling data, writing code, and interpreting results. Workflow: The process that moves a scientific investigation from raw data to coherent research question to insightful contribution. This often involves a complex series of pro- cesses and includes a mixture of machine automation and human intervention. It is a nonlinear and iterative exercise.\n\n\nImportantly, the difficulties we encounter in this [Explore] phase help us build empathy for an eventual audience beyond ourselves. It is here that we experience firsthand the challenges of processing our data set, framing domain research questions appro- priate to it, and structuring the beginnings of a workflow. Documenting our trial and error helps our own work stay on track in addition to assisting future researchers facing similar challenges.\n\n\n\n\nPower of Vulnerability: TED Talk\nDare To Lead Podcast\n\n\nHedgehog concept\n\n\n\n\nAll We Can Save Project\n\nThere is a renaissance blooming in the climate movement: leaderhip that is more characteristically feminine and more faithfully feminist, rooted in ompassion, connection, creativity, and collaboration. …To change everything, we need everyone — All We Can Save\n\n\nJohnson’s frustration with the climate movement isn’t about the current leaders doing a bad job—it’s just that we need more leaders. Her vision of the world includes people from every community in climate leadership roles. — The Marine Biologist Building an Inclusive Climate Movement, Vice\n\n\nAll We Can Save is basically a community bound between two covers, and a gift to any who wishes to join in. - Eric Roston, Bloomberg\n\n\n\n\nThe Value of Welcome — Stef Butland, rOpenSci\n\n\n\n\n\n\nIt’s Not About You: The Truth About Social Media Marketing (2012). Strategy on community building through modern channels\n\n“We tell big stories that matter to a community of users, and together we use those stories to amplify a message that we all care about…And once they start telling their story as part of the bigger story, it suddenly looks like a parade.”\n\nOpen source paradigm shift\n\nI’ve come to use the term “the architecture of participation” to describe the nature of systems that are designed for user contribution.\n\n\n\n\nLeverage points: places to intervene in a system: (in increasing order of effectiveness)\n\nConstants, parameters, numbers (such as subsidies, taxes, standards).\nThe sizes of buffers and other stabilizing stocks, relative to their flows.\nThe structure of material stocks and flows (such as transport networks, population age structures).\nThe lengths of delays, relative to the rate of system change.\nThe strength of negative feedback loops, relative to the impacts they are trying to correct against.\nThe gain around driving positive feedback loops.\nThe structure of information flows (who does and does not have access to information).\nThe rules of the system (such as incentives, punishments, constraints).\nThe power to add, change, evolve, or self-organize system structure.\nThe goals of the system.\nThe mindset or paradigm out of which the system — its goals, structure, rules, delays, parameters — arises.\nThe power to transcend paradigms.\n\n\nSo how do you change paradigms? Thomas Kuhn, who wrote the seminal book about the great paradigm shifts of science,7 has a lot to say about that. In a nutshell, you keep pointing at the anomalies and failures in the old paradigm, you keep coming yourself, and loudly and with assurance from the new one, you insert people with the new paradigm in places of public visibility and power. You don’t waste time with reactionaries; rather you work with active change agents and with the vast middle ground of people who are open-minded.\n\n\n\n\nCautionary Tales Podcast Ep 6 – How Britain Invented, Then Ignored, Blitzkrieg.\nThis tale is about how the organizational architecture of existing entities - whether the British army, Sony, Kodak, or Xerox - cannot always support their own innovation because of the social structures they were built upon. Fascinating to think about in terms of how open science has not been embraced by scientific communities within the existing academic structure.\n\n\n\nCautionary Tales Podcast Ep 7 – Bowie, jazz, and the unplayable piano.\nThis tale is about music: how Keith Jarrett reluctantly played on a broken piano and how David Bowie and Brian Eno’s take on collaboration led to brand new sounds and ideas. I think about this for science and openness - working out of your comfort zones and mixing up how you do it and who you do it with.\n\n\n\nFunding research infrastructure\n\nthere’s also the fact that the current funding model has led to a perceived sense of scarcity, pushing open projects to compete rather than collaborate, to build new features instead of maintaining their work and deepening their level of service for their communities. An additional dimension to our work involves looking at the staffing and human infrastructure powering open technology development, maintenance, governance and stewardship. That volunteer labor and community engagement is often an invisible cost we gloss over in our estimations and recommendations, while also being a core pillar in this work.\n\n\n\n\n\nhttps://larahogan.me/sponsors/"
  },
  {
    "objectID": "mindset.html",
    "href": "mindset.html",
    "title": "Openscapes Mindset",
    "section": "",
    "text": "The Openscapes mindset is about better science for future us. It is about moving away from lonely and demoralizing individual science, and towards science that is more empowering, efficient, open, collaborative, inclusive and kind. It is the idea that open data science tooling & communities exist that are powerful and empowering, and that we can harness this power broadly to create the culture we want to be a part of.\nSlides that have been presented during Champions Program Cohort Calls:"
  },
  {
    "objectID": "mindset.html#better-science-for-future-us",
    "href": "mindset.html#better-science-for-future-us",
    "title": "Openscapes Mindset",
    "section": "Better science for future us",
    "text": "Better science for future us\nBetter science is science that is more open, reproducible, efficient, interoperable and also more diverse, equitable, inclusive, and kind.\nFuture Us is the idea of considering ourselves, our teams, and communities - those who will be joining and continuing our work - whether that is in the next hourm week, or decades.\nTogether better science for future us is an important mindset for science and society at large, and particularly important as we face global challenges in Earth and environmental science that are intensified with climate change.\nBetter science for future us is a real time investment, particularly for data-intensive research.\n\nA Star Wars analogy\nData-intensive research can feel lonely and demoralizing. Like Luke Skywalker, we have all had moments where we feel stuck staring at a challenge that we can’t solve with the skillsets we have. \nThis might not be so obvious to describe as this situation, and could be many things at once that are hard to tease apart. Could be having a tedious process to organize and store data, not being able to run someone else’s code, or not knowing how to get started with software like GitHub.It’s often searching through emails, something like untitled14.xls or analysis_final_final.R\nBut it doesn’t have to be this way –\nOpen data science approaches are open, collaborative, & empowering – it’s like the Force from Star Wars because it enables us to solve challenges in ways we never would have imagined was possible. \nAnd it doesn’t just help with the challenges in front of us, it also broaden our mindsets for the scope and scale of the research questions we can tackle. And again, it’s not just one thing all at once, it’s many smaller things that you can incrementally introduce that become more and more powerful.\nAnd like the Force, open data science is not something that you do alone, but that you do with community.\nDiverse, inclusive teams and communities are key to tackling our research so that it can have enduring impact. Just like in this illustration where not everyone is a Jedi, not everyone needs the same analytical skillsets but we can do more if we work together with a shared mindset and value each other."
  },
  {
    "objectID": "mindset.html#openscapes-mindset",
    "href": "mindset.html#openscapes-mindset",
    "title": "Openscapes Mindset",
    "section": "Openscapes Mindset",
    "text": "Openscapes Mindset\nIn practice, the Openscapes Mindset is about many reinforcing ideas. It is the idea that open data science tooling & communities exist that are powerful and empowering, and that we can harness this power broadly to create the culture we want to be a part of.\n\nReframe data analysis & stewardship as a collaborative effort rather than an individual burden or personal craft\nThis is the mindset where you’re not alone, and it’s not too late. It’s not that everyone else learned this and you somehow missed out. You don’t need to feel shame; you were likely not supported to learn. This is about releasing those feelings and becoming a confident learner and contributor, no matter where you are starting from.\n\n\nRedefine collaborators & community – beyond your own discipline/institution\nRedefine collaborators to include folks that don’t work on the same projects or deliverables than you - this starts with other folks in your research group or lab. And it extends to strangers on the internet doing wildly different things than you are but united by the need to manage, analyze, and communicate around data.\nRedefining collaborators and community opens opportunities for new perspectives, tools, methods, ideas, colleagues, allies, friends, jobs.\n“Future Us” builds from the idea of “Future You/Future Self” being your most important collaborator (see Wilson et al 2017) but with a team science mindset promoting diversity, equity, inclusion, and belonging. How can you work today so that someone other than yourself could reproduce/contribute tomorrow? We describe this more in Lowndes et al. 2019. Cannot emphasize how critical these concepts are.Work now so that you can succeed later (whether that’s this afternoon or 4 years from now, whether it’s for you or someone you don’t know who will pick up where you left off).\n\n\nReimagine challenges – expect there is a better way\nReimagining challenges is based on the idea that there is a better way and that you can find and leverage it. It is the idea of reusing rather than reinventing. It is a release from lonely struggles that also reduces the cognitive load associated with starting from scratch. This means no more silently struggling, reducing the times you reinvent the wheel, and reducing the times you create weird, homegrown workarounds.\nExpecting there’s a better way will help you focus on asking for help sooner, to find what you need faster, iterate with confidence & agency.\n\n\nStrive to be more efficient, open, collaborative, inclusive, and kind\nThis means sharing imperfect work, create space, have empathy, learn together."
  },
  {
    "objectID": "mindset.html#open-data-science",
    "href": "mindset.html#open-data-science",
    "title": "Openscapes Mindset",
    "section": "Open data science",
    "text": "Open data science\nWe define open data science as the tooling and people enabling reproducible, transparent, and inclusive practices for data-intensive science.\n\nThis works as a beautiful feedback loop: Using similar tooling promotes and streamlines teamwork. And teamwork better equips you to learn new tooling. With this shared mindset, the idea of team becomes ever-broadening, along with your abilities to adapt to an evolving softwarescape.\n\nOpen data science feedback loop in action\nThere are innumerable examples of this feedback loop in action.\nOne great example is GitHub.\nAs a tool, GitHub can be used for collaborative version control that handles archiving, bookkeeping, and searching. It also has tools for project management, as well as publishing with Markdown.\nCommunity norms with GitHub include the way files are organized, how documentation looks, and the idea that READMEs displayed on the homepage are used to help onboard new folks to using or contributing to the project. Additionally, folks use the GitHub Issues and Projects feature to discuss and coordinate. Used these ways, GitHub is enabling a new era of #SciComm (Science Communication).\n\nGitHub enables collaboration by reducing both analysis_final_final_final.R and re: fwd: FWD: analysis_final_final_final.R"
  },
  {
    "objectID": "mindset.html#open-data-science-key-concepts",
    "href": "mindset.html#open-data-science-key-concepts",
    "title": "Openscapes Mindset",
    "section": "Open data science key concepts",
    "text": "Open data science key concepts\n\nData science as a discipline\nData science is “the discipline of turning raw data into understanding” (Wickham & Grolemund 2016, R for Data Science).\nThere are concepts, theory, and tools for thinking about and working with data. Just like a field chemistry has concepts for things like moleculte, theory for how they work, and tools for studying them, so does data science — for data.\nAn alternative title to this section would be “data science is a thing”: no matter what your study system or your question, there are discernible steps involved that when you embrace will make you more efficient. These steps are illustrated in this figure from Wickham & Grolemund: you will need to import/get your data into analytical software, wrangle it (tidy and transform), and THEN you can start understanding your data and asking your science questions by making sense of it visually and with models.\n\n\n\nImage from R for Data Science by Wickham & Grolemund\n\n\nTidying your data before asking your science questions is a critical point here. Don’t build your whole analysis around whatever weird format your data may have come in. Data tidying (“data wrangling”, “data prep”) can take up to 50–80% of a data scientist’s time (Lohr 2014, New York Times).\n\nMindset: Decouple your research questions from data questions, get help sooner\n\nData science also has an emphasis on communication. It is incredible what is possible on the communication front. This this one-minute video called What is RMarkdown? shows some of the possibilities.\nData science is not just for “big data” or AI or machine learning. You can use data science theory and tools no matter the size or context of your data.\nAnother important reason to think about data science as a discipline is that it helps dispell the idea that your study system is somehow unique - this is not the case when it comes to data. Distinguish data questions from research questions, learn how to ask for help. Don’t confound them or it will be really hard to iterate (for example, when you want to explore a subset like a specific year or place).\nExpect there is a way to do what you want to do. This will help you find commonalities and unite you with other members of your research group, and beyond.\n\n“When I was doing my PhD, I confounded my science questions with my data questions. I was studying squid, asking questions that no one had ever asked before. But I needed to reformat some dates in Matlab. I treated this date-formatting task also as something that no one had ever asked before. I was looking in the cephalopod literature for guidance; I couldn’t step back and decouple this data question from my squid question, and I struggled for much, much longer because of it.” - Julie Lowndes\n\nOpen data science tools exist - tools to match data science theory.\n\n\n\nFrom Wickham 2017, Welcome to the tidyverse\n\n\nAs Hadley Wickham described in his slides Welcome to the tidyverse, tooling exists for every step of this conceptual diagram. They exist to streamline working with data.\nThese tools are developed by actual people – nice people!\n\n\nOpen as a way to work\nOpen science is a daily benefit: it is a way to be efficient & streamlined. It is not just an added ask to share data at publication. It’s not only about sharing data. It’s about how you work, who you include, and the tools that you use. It starts with reuse: when you leverage existing resources, spend less time reinventing. It starts off with yourself: be open with yourself and your team first.\nOpen means easier onboarding – personal and collective. A focus on inclusive documentation and operations means that it is easier to return to a project, whether it’s picking up where you left off last month or when you’re handing it off to another person. It’s like an external memory (personal and collective).\nOpen requires trust and safety – starting with your team. Psychological safety is a big part of open.\nOpen is a spectrum – what you share, who you share it with, or how you share it. It’s not all-or-nothing.\n\nWhat: slides, tweets, blogs, forums, wikis… then also code, data, protocols\nWho: your self, research group, project team, institution…then also public\nHow: internal servers, DropBox…then also Google Drive, GitHub, data repos\n\n\nMindset: Increasingly weave open into your work so it’s easier to share as you need\n\nOpen helps you find solutions faster as you learn to talk about your data, express your needs, and recognize solutions.\nOpen helps you build confidence – skills are transferable beyond your science. Working openly requires being empathic and inclusive – this will grow a network of allies.\n\n\nResearch group as a team\nFocus on common parts that unite you, not what sets you apart.\nBuild horizontal leadership & resilience so that there is less reinventing, less knowledge lost, less loneliness. Think of the lab horizontally as skillsets & needs instead of vertically as science bins\nIt’s about diversity, equity, inclusion, and belonging: Instead of the skills you have when you come to the group determining how you will be able to Do Science, co-create shared practices and deliberate paths to onboard new people, and skill-share to continue learning together.\n\nMindset: What do our workflows have in common and how can we learn from each other\n\nScience is collaborative. Let’s make it less heads down elbows out.\n\n\nCollaborators & community (redefined) as a way to learn\nLearn from, with, and for others. This helps overcome isolation, self-taught bad practices, apprehension (Stevens et al. 2018). It helps you transform from “self-taught” to “community-taught”.\n\n“We learn from others by using their code and documentation, their blogs and tutorials, their talks and webinars. We learn with others online through Twitter, discussion forums and Slack channels, and in person through coding clubs, hacky hours, meetups, workshops and conferences. And we learn for others by writing tutorials and blogs about our own learning processes, or adding or fulfilling feature requests, which we can then contribute back to the community.” - Lowndes 2019, Open Software Means Kinder Science\n\nUse the Internet more for science (it is such an underleveraged tool!). Learn and connect through Twitter, blogs, forums, new comms outlets…(It is such a cool time to be a scientist).\n\n\n\nExample open communities and Tweet\n\n\n\nMindset: Engage as feels right but know you’re not alone"
  },
  {
    "objectID": "mindset.html#open-science-as-part-of-the-climate-movement",
    "href": "mindset.html#open-science-as-part-of-the-climate-movement",
    "title": "Openscapes Mindset",
    "section": "Open science as part of the climate movement",
    "text": "Open science as part of the climate movement\n\n” ‘We’ speaks to the collective, to collaboration, to community, to the relational work at hand. Addressing the climate crisis…will take everyone.\n‘We’ speaks to justice, to how we do the work that needs doing and whose contributions are valued. We cannot, we must not, go it alone”\n- Ayana Elizabeth Johnson & Katharine Wilkinson, All We Can Save"
  },
  {
    "objectID": "mindset.html#recap",
    "href": "mindset.html#recap",
    "title": "Openscapes Mindset",
    "section": "Recap",
    "text": "Recap\nOpen data science tools, practices, & communities exist and are powerful and empowering, and game-changing for science. They enable us to do better science in less time. They are like the Force from Star Wars:\n\nMore powerful than you ever imagined\nEnable you to broaden the scope of the questions you can ask\nYou can be a Jedi to others: pass forward what you’ve learned\nYou can join & build diverse communities of allies\n\nWe can harness this power for science more broadly. We can create the culture that we want to be a part of – towards kinder science. We can do this with the Openscapes mindset:\n\nBe efficient, open, collaborative, inclusive, and kind\nReframe data analysis as a collaborative effort rather than an individual burden or personal craft\nRedefine collaborators & community: Future You, Future Us\n\nThink like a team: share imperfect work and learn together\nBeyond your own discipline, and online\n\nReimagine challenges: Expect there is a better way\n\nIterate with confidence, agency, & community\nYou’re not alone, it’s not too late\n\n\nOur approach to help develop this mindset is by focusing on the following:\n\nData science as a discipline\nOpen as a way to work\nGroup members as a team\nCollaborators and community (redefined) as a way to learn\nThe Internet as an underleveraged tool for science"
  },
  {
    "objectID": "mindset.html#notes-and-resources",
    "href": "mindset.html#notes-and-resources",
    "title": "Openscapes Mindset",
    "section": "Notes and resources",
    "text": "Notes and resources\n\nBiased by default: exploring discrimination in research code - Abby Cabunoc Mayes Bioinformatics Community Conference Keynote 2020\nCarpe Talk — Bryan & Averick. Consider for your next talk!"
  },
  {
    "objectID": "communities.html",
    "href": "communities.html",
    "title": "Open communities",
    "section": "",
    "text": "Open communities play a big role in advancing research, helping research feel less lonely and reducing the amount of time we all spend being stuck spend reinventing the wheel. This is a brief (incomplete) introduction to the idea of open communities. We will explore: What are open communities? Why engage with them? How to engage with them? And also how Twitter as a legit tool for coding and science. Originally focusing on R communities, we are adding more examples beyond.\nSlides that have been presented during Champions Program Cohort Calls:"
  },
  {
    "objectID": "communities.html#what-are-open-communities",
    "href": "communities.html#what-are-open-communities",
    "title": "Open communities",
    "section": "What are open communities?",
    "text": "What are open communities?\nOpen communities are groups of people openly creating, sharing, teaching, collaborating. They are united around a shared interest: coding language, topic, discipline, etc.\nThey have a culture of shared & continued learning, prioritize diversity, equity, inclusion.\nThey have online and in-person activities.\nHere are some examples of communities. Read more & direct links: https://rstudio-conf-2020.github.io/r-for-excel/collaborating.html#r-communities\n\n\n\nSome #rstats communities with in-person and online events and channels\n\n\n\nThere are strategies for learning with both online and local communities."
  },
  {
    "objectID": "communities.html#why-engage-with-open-communities",
    "href": "communities.html#why-engage-with-open-communities",
    "title": "Open communities",
    "section": "Why engage with open communities?",
    "text": "Why engage with open communities?\n\nSkillshare (teach & learn)\n\nCoding, software, workflows\nCollaboration, leadership, DEIJ\n\nMeet allies, grow friendships, career opportunities\nHelp improve science & scientific culture\n\nIncrease visibility & value of coding, data, collaboration skills\nDrive change: modern ways to contribute to science. Formally incentivize and teach! Include in promotion/tenure (we shouldn’t really have to teach ourselves on our own time and not be credited), create jobs\n\nCarry on & forward your experience from Openscapes"
  },
  {
    "objectID": "communities.html#how-to-get-started",
    "href": "communities.html#how-to-get-started",
    "title": "Open communities",
    "section": "How to get started?",
    "text": "How to get started?\nGoogle your interests/needs. When you Google, include what you want to do PLUS r, rstats; python.\nStart by listening and learning. Be deliberate: curate who you follow.\nLike and share when you’re comfortable.\nThen, contribute – your ideas, your blogs, your papers, your code… Contributors are welcome in open communities! And know too that the R packages ggplot & knitr were created by students (Wickham & Xie) (see McBain 2019).\nFinally, Twitter is a legit tool for science. It’s a good way to learn what you need to learn and broadening your horizons while building community. Some places to start: #rstats, #rstatsES, #rspatial, #pydata, #BlackAndSTEM, #MeTooSTEM\nSeaside Chats are a great way to start exploring together."
  },
  {
    "objectID": "communities.html#examples-in-the-wild-campus-coding-clubs",
    "href": "communities.html#examples-in-the-wild-campus-coding-clubs",
    "title": "Open communities",
    "section": "Examples in the wild: campus coding clubs",
    "text": "Examples in the wild: campus coding clubs\n\nEcoDataScience at UC Santa Barbara\nBioData Club at OHSU\nThe Bio-Data Club at Moffitt"
  },
  {
    "objectID": "team-culture.html",
    "href": "team-culture.html",
    "title": "Team culture",
    "section": "",
    "text": "We discuss team culture because while we know that diverse teams are more innovative, creating spaces where everyone can do their best work and feel safe to contribute takes intention; it does not happen by default. There is a lot of work to do to improve research culture, and we can lead by example in our own research groups and communities.\nSlides that have been presented during Champions Program Cohort Calls:\nSee also the following chapter on Codes of Conduct.\nhttps://twitter.com/Napaaqtuk/status/1528790732718452738"
  },
  {
    "objectID": "team-culture.html#why-talk-about-team-culture",
    "href": "team-culture.html#why-talk-about-team-culture",
    "title": "Team culture",
    "section": "Why talk about team culture?",
    "text": "Why talk about team culture?\nRole modeling sets a lot of team culture, and there is a lot we can learn and do to deliberately create a scientific culture that we want to be a part of."
  },
  {
    "objectID": "team-culture.html#psychological-safety",
    "href": "team-culture.html#psychological-safety",
    "title": "Team culture",
    "section": "Psychological safety",
    "text": "Psychological safety\nAmy C. Edmondson is the Novartis Professor of Leadership and Management at Harvard Business School.\na shared belief that team members will not be rejected or embarrassed for speaking up with their ideas, questions, or concerns\nhttps://hbr.org/2022/03/research-to-excel-diverse-teams-need-psychological-safety\nThey recommend three ways to build psychologically safe environments: framing, inquiry, and bridging boundaries.\nFrame meetings as opportunities for information-sharing. Frame differences as a source of value.\nOpen questions. Questions that build shared ownership and causality.\nListening -\nHopes and goals. What do you want to accomplish?\nResources and skills. What do you bring to the table?\nConcerns and obstacles. What are you up against? What are you worried about?\n\nScience benefits from diversity\nAnd we need to be deliberate about welcoming and including people from diverse backgrounds.\nA few recent articles from Nature with many more links within:\n\nScience benefits from diversity\nWhat does it take to make an institution more diverse?\n\n\n\nSexual harassment is rife in the sciences\nSexual harassment is rife in the sciences, finds landmark US study. Existing policies to address the issue are ineffective, concludes a long-awaited report from the National Academies of Sciences, Engineering, and Medicine.\nMost common form is gender harassment: it’s the “put-downs as opposed to come-ons”.\n\n\nWe need to unlearn racism and build antiracist culture in science\n\nTen simple rules for building an antiracist lab - Chaudhary & Berhe, 2020. PLOS\nUnlearning Racism in Geoscience — URGE\n\n\n\nPut your values forward\nModel the behavior you want to see in your research group & beyond (lab, dept, campus, organization, online)\n\n\nBuilding trust\nHave to build trust and be intentional, don’t hope for organic.\n\nHow to build (and rebuild trust - Frances Frei\n\n\n\nSustain the culture\nOvertly showing kindness & a Code of Conduct can filter out people who don’t want to be subject to its enforcement – rOpenSci\nLabs have people coming and going all the time; how do you set the tone and have it be sustainable?"
  },
  {
    "objectID": "team-culture.html#deliberately-setting-the-tone",
    "href": "team-culture.html#deliberately-setting-the-tone",
    "title": "Team culture",
    "section": "Deliberately setting the tone",
    "text": "Deliberately setting the tone\nOpening remarks at RStudio::conf 2019, in front of an audience of 1700 at a global software conference, Chief Scientist Hadley Wickham announces the Code of Conduct, how to identify RStudio staff if you need help, and how to mingle with welcoming body posture to invite others to join. This set the tone of the whole conference to be the most positive I have ever attended.\n\nCollegiality\nWe must deliberately set the tone for collegiality to create a positive, inclusive research group environment.\nSafety and accessibility as parts of inclusion and empowerment. Does everyone feel safe to speak up? Does everyone have channels to contribute? This is especially true as the tech we use evolves. Who can participate?\nThis builds resilience to your research group. If someone needs to leave for a family emergency, maternity/paternity leave, vacation, set yourselves up so your team continue smoothly/ — Angela Bassa RStudio talk\nOpportunity cost of not doing this. Burnout, people leaving science.\n\n\n\nTeam efficiency\nWe must deliberately set the tone to create a positive, inclusive research group environment that fuels team efficiency.\nThis means create a team mindset, and focusing on similarities rather differences. We all work on different projects and have different research questions, but we all have to wrangle data, organize version files, have things we don’t know…let’s create a space where we can talk about all this and find common ground to tackle together so we don’t reinvent.\nThere can be an advantage to having team conventions. This can both reduce friction and reinventing the wheel. But there also needs to be room for different skills people come in with. For example, if they’re more efficient in Python, don’t want to force R. But want to create space where folks can interoperate and work together. The tech/software side helps with this, but it’s our mindsets too. We need to be open to it."
  },
  {
    "objectID": "team-culture.html#open-software-can-facilitate-openshared-culture",
    "href": "team-culture.html#open-software-can-facilitate-openshared-culture",
    "title": "Team culture",
    "section": "Open software can facilitate open/shared culture",
    "text": "Open software can facilitate open/shared culture\nA lot to say here, for now, see:\n\nhttps://openscapes.github.io/slides/betterscience/environment-canada\nhttps://blogs.scientificamerican.com/observations/open-software-means-kinder-science/"
  },
  {
    "objectID": "team-culture.html#enabling-participating",
    "href": "team-culture.html#enabling-participating",
    "title": "Team culture",
    "section": "Enabling & participating",
    "text": "Enabling & participating\nHere are some ideas that you can support and participate in to learn and create a kinder team culture:\n\nSeaside chats – discuss share data workflows\nFrom Michelle Stuart’s blog about the Pinsky Lab’s first Fishbowl chat:\n\nThis open communication has leaked into the general discussion going on in our open work space. Lab members seem more comfortable with asking teammates for help, and it is exciting to see all of us getting on the same page with our data science.”�\n\n\n\nHackathons or documentation parties – co-create\n\n\nSocial events\nGet to know each other outside of work. Do some during work hours can include more people who can’t participate after work\n\n\nOnboarding – how to welcome new people to your research group\n\n\nAsking for help\nCreate a welcoming environment where they know where to ask for help – They won’t know what questions to ask. Provide structure.\n\n\nCode of Conduct (next chapter)!"
  },
  {
    "objectID": "team-culture.html#further-resources",
    "href": "team-culture.html#further-resources",
    "title": "Team culture",
    "section": "Further Resources",
    "text": "Further Resources\n\nA Practical Guide to Mentoring Across Intersections - Harriot 2020 VanguardSTEM Blog\nGet it wrong for me: What I need from allies - Carpenter 2020.\n\n“Now, when someone asks, ‘what do you need from me’, I say, ‘I need you to learn, I need you to care’. Somehow, we’ve all evolved to underestimate the power of learning and the power of seeking to understand. Knowing what things harm me is a sign that you value me. …Then I want an ally who works to change their individual behavior and change the system around us for the better. Not just one or the other. I want a bunch of people who are interested in becoming allies to me to get it wrong. Because I promise, you will get it wrong, likely more than once. But please get it wrong, for me. Be wrong on my behalf. Try stuff, learn stuff, make attempts, and fail. Embrace the discomfort of not knowing, of not being certain, of not understanding and then be motivated enough to learn and get better. I will give you grace if you give me effort. We are risking our lives; you can risk getting things wrong.”\n\nInclusivity in STEM: Interview with Dr Mica Estrada (video, 17 mins). “Dr. Mica Estrada is a social psychologist and faculty member at University of San Francisco. Her research explores the role of identity and values in influencing the persistence of historically underserved students in STEM.”\n\nPEERS\nmicro affirmations\n\nRecreating Wakanda by promoting Black excellence in ecology and evolution — Schell et al (2020)\nGet it wrong for me: What I need from allies — Carpenter (2020)\nA Practical Guide to Mentoring Across Intersections — Harriot (2020)\nFor Our White Friends Desiring to Be Allies — Ariel (2017)\n\nDr. Dori Tunstall on Respectful Design: Models for Diversity, Inclusion, & Decolonization — Tunstall (2020)\nSexual harassment is rife in the sciences, finds landmark US study — Witze (2018)\nAll We Can Save — Johnson & Wilkerson (2020)\nBraiding Sweetgrass — Kimmerer (2013)"
  },
  {
    "objectID": "how-do-i/do-fix-git-things.html",
    "href": "how-do-i/do-fix-git-things.html",
    "title": "Do and fix things in Git",
    "section": "",
    "text": "These are our go-to resources about GitHub; they include philosophy, step-by-step guidance, and troubleshooting. Most examples are with R and RStudio, and are applicable more broadly."
  },
  {
    "objectID": "how-do-i/do-fix-git-things.html#excuse-me-do-you-have-a-moment-to-talk-about-version-control",
    "href": "how-do-i/do-fix-git-things.html#excuse-me-do-you-have-a-moment-to-talk-about-version-control",
    "title": "Do and fix things in Git",
    "section": "Excuse Me, Do You Have a Moment to Talk About Version Control?",
    "text": "Excuse Me, Do You Have a Moment to Talk About Version Control?\n“Excuse Me, Do You Have a Moment to Talk About Version Control?” Bryan J, 2017, PeerJ"
  },
  {
    "objectID": "how-do-i/do-fix-git-things.html#happy-git-with-r",
    "href": "how-do-i/do-fix-git-things.html#happy-git-with-r",
    "title": "Do and fix things in Git",
    "section": "Happy Git With R",
    "text": "Happy Git With R\n\n“Happy Git provides opinionated instructions on how to Install Git and get it working smoothly with GitHub, in the shell and in the RStudio IDE; Develop a few key workflows that cover your most common tasks; Integrate Git and GitHub into your daily work with R and R Markdown.”\n\nhttps://happygitwithr.com/"
  },
  {
    "objectID": "how-do-i/do-fix-git-things.html#r-for-excel-users",
    "href": "how-do-i/do-fix-git-things.html#r-for-excel-users",
    "title": "Do and fix things in Git",
    "section": "R for Excel Users",
    "text": "R for Excel Users\nR for Excel Users. Lowndes J and Horst A, 2020. Chapter 4 and 8 focus on starting setup and collaboration with GitHub and RStudio"
  },
  {
    "objectID": "how-do-i/do-fix-git-things.html#usethis",
    "href": "how-do-i/do-fix-git-things.html#usethis",
    "title": "Do and fix things in Git",
    "section": "usethis",
    "text": "usethis\nusethis. Wickham H and Bryan J.\n\nusethis is a workflow R package: it automates repetitive tasks that arise during project setup and development, both for R packages and non-package projects."
  },
  {
    "objectID": "how-do-i/do-fix-git-things.html#git-flight-rules",
    "href": "how-do-i/do-fix-git-things.html#git-flight-rules",
    "title": "Do and fix things in Git",
    "section": "Git Flight Rules",
    "text": "Git Flight Rules\n“A guide for astronauts (now, programmers using Git) about what to do when things go wrong.”\nhttps://github.com/k88hudson/git-flight-rules\nThis is quite a comprehensive and maintained list of git commands, using the command line."
  },
  {
    "objectID": "how-do-i/do-fix-git-things.html#github-a-beginners-guide-to-going-back-in-time-aka-fixing-mistakes",
    "href": "how-do-i/do-fix-git-things.html#github-a-beginners-guide-to-going-back-in-time-aka-fixing-mistakes",
    "title": "Do and fix things in Git",
    "section": "GitHub: A beginner’s guide to going back in time (aka fixing mistakes)",
    "text": "GitHub: A beginner’s guide to going back in time (aka fixing mistakes)\nhttps://ohi-science.org/news/github-going-back-in-time\nThis has screenshots and a workflow with RStudio and the command line."
  },
  {
    "objectID": "how-do-i/do-fix-git-things.html#practical-r-workflow-for-scientists",
    "href": "how-do-i/do-fix-git-things.html#practical-r-workflow-for-scientists",
    "title": "Do and fix things in Git",
    "section": "Practical R Workflow for Scientists",
    "text": "Practical R Workflow for Scientists\nBy Dr. Eli Holmes\nhttps://rverse-tutorials.github.io/RWorkflow-NWFSC-2022/week1.html"
  },
  {
    "objectID": "how-do-i/index.html",
    "href": "how-do-i/index.html",
    "title": "How Do I…",
    "section": "",
    "text": "This is a collection of resources that complement what we cover in the Champions Lesson Series - things that often come up as questions and that folks can screenshare and do together during Seaside Chats and Co-Working sessions. We point to existing resources as much as possible."
  },
  {
    "objectID": "how-do-i/reuse-openscapes-approach.html",
    "href": "how-do-i/reuse-openscapes-approach.html",
    "title": "Reuse the Openscapes Approach",
    "section": "",
    "text": "The Openscapes Approach Guide is where we’re starting to document our approach so that others can lead their own Champions Cohorts. Even if you’re not leading your own Cohort, there are many things we do that you can reuse. For example:\n\nHave Google Doc agenda with live notetaking during your meetings (if this is a recurring meeting, organize it in a shared folder, either with one doc per meeting like our Cohort Call Agendas or many meetings in the same doc with the most recent at the top, like our Co-Working notes)\nBegin a meeting with a Roll Call/Check in and Code of Conduct\nShare slides before giving your talk so that folks can see them in high resolution and click on links\nTeach using other people’s slides"
  },
  {
    "objectID": "how-do-i/setup-rstudio-github.html",
    "href": "how-do-i/setup-rstudio-github.html",
    "title": "Setup RStudio and GitHub",
    "section": "",
    "text": "To setup RStudio and GitHub, you will need four things:\n\nR\nRStudio\nGit\nGitHub\n\nFollow the UCSB MEDS Installation Guide for detailed instructions on how to create accounts, download, install, and configure on Mac and Windows. (For an even more detailed walk-through, see Allison Horst’s ESM 206 Google Doc). Thanks for sharing Allison!"
  },
  {
    "objectID": "how-do-i/setup-rstudio-github.html#practice",
    "href": "how-do-i/setup-rstudio-github.html#practice",
    "title": "Setup RStudio and GitHub",
    "section": "Practice",
    "text": "Practice\nNow you’ll want to practice how to use RStudio and GitHub. Follow R for Excel Users’ GitHub Chapter to create a GitHub repository, clone it to RStudio, make edits, and practice syncing."
  },
  {
    "objectID": "how-do-i/create-publish-quarto.html",
    "href": "how-do-i/create-publish-quarto.html",
    "title": "Create & publish with Quarto",
    "section": "",
    "text": "We’ve created a tutorial on how to copy (fork or download) an existing Quarto website like this one and adapt it for your own uses. Please see: https://openscapes.github.io/quarto-website-tutorial/."
  },
  {
    "objectID": "community-lessons/index.html",
    "href": "community-lessons/index.html",
    "title": "Community Lessons",
    "section": "",
    "text": "There are growing resources developed by Openscapes teams!\nThis is the beginning of a growing list; please share others to add. You can suggest via GitHub on the right of this page - click “Edit this page” or “Report an Issue”, or share your idea via Twitter (linked below the logo on the left) or email openscapes @ nceas.ucsb.edu."
  },
  {
    "objectID": "community-lessons/index.html#nasa-openscapes-cloud-tutorials",
    "href": "community-lessons/index.html#nasa-openscapes-cloud-tutorials",
    "title": "Community Lessons",
    "section": "NASA Openscapes Cloud Tutorials",
    "text": "NASA Openscapes Cloud Tutorials\nThe NASA Earthdata-Openscapes Mentors team and other contributors are creating open educational resources to help researchers migrate workflows to the Cloud - all available for reuse and remix.\nNASA Openscapes Cloud Tutorials\nCheck out the 2021-Cloud-Hackathon materials!"
  },
  {
    "objectID": "community-lessons/index.html#nmfs-openscapes",
    "href": "community-lessons/index.html#nmfs-openscapes",
    "title": "Community Lessons",
    "section": "NMFS Openscapes",
    "text": "NMFS Openscapes\nThe overarching vision of the NMFS Openscapes is to support scientific researchers within NOAA Fisheries by providing training in reproducible scientific workflows and platforms, facilitating collaboration across divisions in common scientific data science tasks, and providing shared “best practices” resources. Check out the NMFS R UG (R Users Group) for upcoming events and Wiki for links to resources and examples of open science at NOAA Fisheries.\nNMFS-OpenSci (github)\nNMFS-OpenSci Resource Book\nNMFS-Openscapes (github)\nHighlighting a few lessons by Eli Holmes and Em Markowitz:\n\nAdvanced GitHub Clinic\ngoogledrive R package\nRVerse Tutorials, particularly Practical R+Git Workflow for Scientists May-July 2022 by Eli Holmes\n\nRVerse Tutorials is a collection of teaching materials on R and R Workflow by the Mathematical Biology Program and the Northwest Fisheries Science Center."
  },
  {
    "objectID": "community-lessons/index.html#fay-lab-manual",
    "href": "community-lessons/index.html#fay-lab-manual",
    "title": "Community Lessons",
    "section": "Fay Lab Manual",
    "text": "Fay Lab Manual\nThis is the lab manual for the Fay Lab at the University of Massachusetts Dartmouth School for Marine Science and Technology.\nhttps://thefaylab.github.io/lab-manual/\nCheck out how they’ve organized this onboarding document that prospective students and postdocs have said stood out to them. Consider reusing/remixing for your own group!\nSlides from Gavin Fay’s 2022 talk at NOAA Alaska Fisheries Science Center"
  },
  {
    "objectID": "community-lessons/index.html#california-water-board-data-center",
    "href": "community-lessons/index.html#california-water-board-data-center",
    "title": "Community Lessons",
    "section": "California Water Board Data Center",
    "text": "California Water Board Data Center\nhttps://github.com/CAWaterBoardDataCenter"
  },
  {
    "objectID": "community-lessons/index.html#r-for-excel-users",
    "href": "community-lessons/index.html#r-for-excel-users",
    "title": "Community Lessons",
    "section": "R for Excel Users",
    "text": "R for Excel Users\nThis course is for Excel users who want to add or integrate R and RStudio into their existing data analysis toolkit. It is a friendly intro to becoming a modern R user, full of tidyverse, RMarkdown, GitHub, collaboration & reproducibility.\nhttps://rstudio-conf-2020.github.io/r-for-excel/\nCheck out the resources throughout as well - it’s not only for Excel users, it’s for everyone."
  },
  {
    "objectID": "community-lessons/index.html#allison-horst---open-educational-resources",
    "href": "community-lessons/index.html#allison-horst---open-educational-resources",
    "title": "Community Lessons",
    "section": "Allison Horst - open educational resources",
    "text": "Allison Horst - open educational resources\nAllison Horst shares many open educational resources, including workshops and slides, at https://www.allisonhorst.com/:\n\n“I actively work to contribute to open educational resources, including software for data science education (e.g. the palmerpenguins R dataset package), and artwork for data science & stats teachers and learners. From 2019 - 2020 I was RStudio’s first Artist-in-Residence. You can read more about my motivation in that role in this blog post, and you can find some of my R- and stats-related artwork in this repo.”\n\nAllison teaches environmental data science at UCSB (see her courses at https://ucsb-meds.github.io/)."
  },
  {
    "objectID": "community-lessons/index.html#tidy-tuesday",
    "href": "community-lessons/index.html#tidy-tuesday",
    "title": "Community Lessons",
    "section": "Tidy Tuesday",
    "text": "Tidy Tuesday\nhttps://www.openscapes.org/blog/2019/05/02/tidy-tuesday-coding-club/\nFrom Nyssa:\nFor our group we had 2 hour sessions (1 hour is a bit too short for more novices and 2 hours gives the more advanced students time to try really new cool things). And we have a facilitator (usually me) that just checks in with the crew every few minutes and helps when students get stuck. But, it is very informal in that everyone just shows up and codes and chats. I have done this both in a conference room and at a bar. I also usually have people put some of their works in progress or final plots on the screen to show everyone else and share their “coding wins” or ask for help from the audience. And, yes, we use the Tidy Tuesday data because then they can also share their plots and code on twitter with the community and see the awesome creativity of the broader R community as well."
  }
]